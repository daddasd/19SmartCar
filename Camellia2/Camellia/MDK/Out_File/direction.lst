C251 COMPILER V5.60.0,  direction                                                          12/05/24  21:52:23  PAGE 1   


C251 COMPILER V5.60.0, COMPILATION OF MODULE direction
OBJECT MODULE PLACED IN .\Out_File\direction.obj
COMPILER INVOKED BY: F:\Keil_c251\C251\BIN\C251.EXE ..\USER\Hardware\direction.c XSMALL WARNINGLEVEL(3) OPTIMIZE(0,SPEED
                    -) BROWSE INCDIR(..\..\Libraries\libraries;..\..\Libraries\seekfree_libraries;..\..\Libraries\seekfree_peripheral;..\CODE
                    -;..\USER\inc;..\USER\src;..\USER\Hardware;..\USER\Hardware) DEBUG PRINT(.\Out_File\direction.lst) TABS(2) OBJECT(.\Out_F
                    -ile\direction.obj) 

stmt  level    source

    1          /*
    2           * @Description:
    3           * @Author: Yzhi
    4           * @Date: 2023-11-17 21:24:19
    5           * @LastEditTime: 2024-01-19 11:52:20
    6           * @LastEditors: Yzhi
    7           */
    8          #include "myconfig.h"
    9          
   10          #define out_max 20000
   11          #define Angle_MAX 35-00
   12          
   13          float Nh_P = 160;  // 0.5
   14          float Nh_D = 1.85; // 4.1
   15          float Wh_P = 90;
   16          float Wh_D = 320;
   17          float gyro_z3 = 0;
   18          
   19          int Speed_Ring_Flag = 0;
   20          
   21          //--
   22          //@brief      ����(�⻷) λ��ʽ
   23          //@param      c hazhi : ��в�ֵ KP ���� KI ���� KD ΢��
   24          //@return     void
   25          //--
   26          
   27          int wh_Turn_Out(int16 chazhi, float dir_p, float dir_d)
   28          {
   29   1        float error;
   30   1        static float last_error = 0;
   31   1        float Output;
   32   1        float error_derivative;
   33   1        // ����λ�����
   34   1        error = chazhi;
   35   1        // ����λ�����仯��
   36   1        error_derivative = error - last_error;
   37   1        // ����PD�����������
   38   1        Output = error * dir_p + error_derivative * dir_d;
   39   1        // ������һʱ�̵�λ�����
   40   1        last_error = error;
   41   1        // ����������޷�
   42   1        Output = limit(Output, out_max);
   43   1        return (int)Output;
   44   1      }
   45          
   46          //--
   47          //@brief      ����(�ڻ�) λ��ʽ
   48          //@param      chazhi : ��в�ֵ KP ���� KI ���� KD ΢��
   49          //@return     void
   50          //--
   51          
   52          int nh_Turn_Out(int err, float dir_p, float dir_i)
   53          {
   54   1        int error1 = 0;
   55   1        static float last_err = 0, nh_out = 0, P_out = 0, I_out = 0, out = 0;
   56   1        error1 = err - mpu6050_gyro_z / 65.6;
C251 COMPILER V5.60.0,  direction                                                          12/05/24  21:52:23  PAGE 2   

   57   1        P_out = dir_p * (error1 - last_err);
   58   1        I_out = dir_i * error1;
   59   1        if (I_out > 2000)
   60   1          I_out = 2000;
   61   1        if (I_out < -2000)
   62   1          I_out = -2000;
   63   1        out = P_out + I_out;
   64   1        nh_out += out;
   65   1        last_err = error1;
   66   1        return (int)nh_out;
   67   1      }
   68          
   69          //--
   70          //@brief      ���򻷿��ƣ��ڻ�1ms�⻷3ms��
   71          //@param      void
   72          //@return     �������
   73          //-
   74          int DirControl(void)
   75          {
   76   1        static int count = 0;
   77   1        static int wh_out = 0;
   78   1        if (count == 3)
   79   1        {
   80   2          wh_out = wh_Turn_Out(Inductance_Error, Wh_P, Wh_D);
   81   2          count = 0;
   82   2        }
   83   1        count++;
   84   1        return (int)nh_Turn_Out(wh_out, Nh_P, Nh_D) * count / 3;
   85   1      }
   86          
   87          
   88          int Angle_Ring(double target, float p, float d)
   89          {
   90   1        float error;
   91   1        static float last_error = 0, Ki_val = 0;
   92   1        int Output, Angle_Speed;
   93   1        float error_derivative;
   94   1        gyro_z3 += ((mpu6050_gyro_z) * 0.000121 - 0.001);
   95   1        error = target - gyro_z3;
   96   1        Angle_Speed=Angle_Speed_Ring(error, 180, 2.5);
   97   1        error_derivative = error - last_error;
   98   1        Output = (int)error * p + Angle_Speed * d;
   99   1        last_error = error;
  100   1        Motor_PWM(+Output, -Output);
  101   1        if(abs(error)<2)
  102   1          return 1;
  103   1      }
  104          
  105          int Angle_Ring1(double target, float p, float d)
  106          {
  107   1        float error;
  108   1        int Output, Angle_Speed;
  109   1        gyro_z3 += ((mpu6050_gyro_z) * 0.000121 - 0.001);
  110   1        error = target - gyro_z3;
  111   1        Output = error * p + ((mpu6050_gyro_z) * 0.000121 - 0.001) * d;
  112   1        Motor_PWM(+Output, -Output);
  113   1      }
*** WARNING C47 IN LINE 108 OF ..\USER\Hardware\direction.c: 'Angle_Speed': unreferenced local variable
  114          
  115              /**
  116              ?* @brief ????
  117              ?*
  118              ?* @param err
  119              ?* @param dir_p
  120              ?* @param dir_i
  121              ?* @return int
C251 COMPILER V5.60.0,  direction                                                          12/05/24  21:52:23  PAGE 3   

  122              ?*/
  123              int Angle_Speed_Ring(int err, float dir_p, float dir_i)
  124          {
  125   1        int error1 = 0;
  126   1        static float last_err = 0, nh_out = 0, P_out = 0, I_out = 0, out = 0;
  127   1        error1 = err - mpu6050_gyro_z / 65.6;
  128   1        P_out = dir_p * (error1 - last_err);
  129   1        I_out = dir_i * error1;
  130   1        if (I_out > 2000)
  131   1          I_out = 2000;
  132   1        if (I_out < -2000)
  133   1          I_out = -2000;
  134   1        out = P_out + I_out;
  135   1        nh_out += out;
  136   1        last_err = error1;
  137   1        return (int)nh_out;
  138   1      }
  139          
  140          /**
  141           * @brief  ���򻷷���������������Ϊd������
  142           *
  143           * @param chazhi
  144           * @param dir_p
  145           * @param dir_d
  146           * @param dir_d2
  147           * @return int
  148           */
  149          int DirControl_2(int16 chazhi, float dir_p, float dir_d, float dir_d2)
  150          {
*** WARNING C57 IN LINE 150 OF ..\USER\Hardware\direction.c: parameter 1: different from declaration
  151   1        float error;
  152   1        static float last_error = 0;
  153   1        float Output;
  154   1        float error_derivative;
  155   1        // ����λ�����
  156   1        error = chazhi;
  157   1        // ����λ�����仯��
  158   1        error_derivative = error - last_error;
  159   1        // ����PD�����������
  160   1        Output = error * dir_p + error_derivative * dir_d + mpu6050_gyro_z * dir_d2;
  161   1        // ������һʱ�̵�λ�����
  162   1        last_error = error;
  163   1        // ����������޷�
  164   1        Output = limit(Output, out_max);
  165   1        return (int)Output;
  166   1      }
  167          
  168          /**
  169           * @brief 
  170           * 
  171           * @param L_Distanc 
  172           * @param R_Distance 
  173           */
  174          int Car_Distance(int Distance)
  175          {
  176   1        static int bmq_jifen,flag =1;
  177   1        bmq_jifen += (L_Pulse + R_Pulse) * 0.5;
  178   1        if (bmq_jifen<=Distance)
  179   1        {
  180   2          //LSpeed_pid_Out(20, L_Pulse);
  181   2          //RSpeed_pid_Out(20, R_Pulse);
  182   2          Motor_PWM(LSpeed_pid_Out(20, L_Pulse), RSpeed_pid_Out(20, R_Pulse));
  183   2        }
  184   1        else if(bmq_jifen >Distance)
  185   1        {
  186   2          if(Angle_Ring(90, 25, 1)==1)
C251 COMPILER V5.60.0,  direction                                                          12/05/24  21:52:23  PAGE 4   

  187   2          {
  188   3            bmq_jifen = 0;
  189   3            L_Pulse = 0;
  190   3            R_Pulse=0;
  191   3            gyro_z3 = 0;
  192   3          }
  193   2          return 1;
  194   2        }
  195   1      }
*** WARNING C180 IN LINE 103 OF ..\USER\Hardware\direction.c: 'Angle_Ring': not every path returns a value
*** WARNING C180 IN LINE 103 OF ..\USER\Hardware\direction.c: 'Angle_Ring': not every path returns a value
*** WARNING C135 IN LINE 113 OF ..\USER\Hardware\direction.c: 'Angle_Ring1': no return value
*** WARNING C135 IN LINE 113 OF ..\USER\Hardware\direction.c: 'Angle_Ring1': no return value
*** WARNING C180 IN LINE 194 OF ..\USER\Hardware\direction.c: 'Car_Distance': not every path returns a value
*** WARNING C180 IN LINE 194 OF ..\USER\Hardware\direction.c: 'Car_Distance': not every path returns a value


Module Information          Static   Overlayable
------------------------------------------------
  code size            =      1264     ------
  ecode size           =    ------     ------
  data size            =    ------     ------
  idata size           =    ------     ------
  pdata size           =    ------     ------
  xdata size           =    ------     ------
  xdata-const size     =    ------     ------
  edata size           =       202     ------
  bit size             =    ------     ------
  ebit size            =    ------     ------
  bitaddressable size  =    ------     ------
  ebitaddressable size =    ------     ------
  far data size        =    ------     ------
  huge data size       =    ------     ------
  const size           =    ------     ------
  hconst size          =       176     ------
End of Module Information.


C251 COMPILATION COMPLETE.  8 WARNING(S),  0 ERROR(S)
