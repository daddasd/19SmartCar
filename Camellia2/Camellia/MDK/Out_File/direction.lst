C251 COMPILER V5.60.0,  direction                                                          24/05/24  23:20:51  PAGE 1   


C251 COMPILER V5.60.0, COMPILATION OF MODULE direction
OBJECT MODULE PLACED IN .\Out_File\direction.obj
COMPILER INVOKED BY: E:\Keil5C251\C251\BIN\C251.EXE ..\USER\Hardware\direction.c XSMALL WARNINGLEVEL(3) OPTIMIZE(0,SPEED
                    -) BROWSE INCDIR(..\..\Libraries\libraries;..\..\Libraries\seekfree_libraries;..\..\Libraries\seekfree_peripheral;..\CODE
                    -;..\USER\inc;..\USER\src;..\USER\Hardware;..\USER\Hardware) DEBUG PRINT(.\Out_File\direction.lst) TABS(2) OBJECT(.\Out_F
                    -ile\direction.obj) 

stmt  level    source

    1          /*
    2           * @Description:
    3           * @Author: Yzhi
    4           * @Date: 2023-11-17 21:24:19
    5           * @LastEditTime: 2024-01-19 11:52:20
    6           * @LastEditors: Yzhi
    7           */
    8          #include "myconfig.h"
    9          
   10          #define out_max 20000
   11          #define Angle_MAX 3500
   12          
   13          float Nh_P = 335; // 0.5
   14          float Nh_D = 7.2; // 4.1
   15          float Wh_P = 0.3;
   16          float Wh_D = 0.05;
   17          float gyro_z3 = 0;
   18          
   19          float Angle_Speed_P = 415;
   20          float Angle_Speed_I = 9.2;
   21          
   22          
   23          
   24          int Speed_Ring_Flag = 0;
   25          
   26          /**
   27           * @brief 外环
   28           *
   29           * @param chazhi 电感差值PD控制
   30           * @param dir_p  KP
   31           * @param dir_d  KD
   32           * @return int   外环返回值
   33           */
   34          
   35          int wh_Turn_Out(int16 chazhi, float dir_p, float dir_d)
   36          {
   37   1        float error;
   38   1        static float last_error = 0;
   39   1        float Output;
   40   1        float error_derivative;
   41   1      
   42   1        error = chazhi;
   43   1      
   44   1        error_derivative = error - last_error;
   45   1      
   46   1        Output = error * dir_p + error_derivative * dir_d;
   47   1      
   48   1        last_error = error;
   49   1      
   50   1        Output = limit(Output, out_max);
   51   1        return (int)Output;
   52   1      }
   53          
   54          /**
   55           * @brief 内环角速度PI控制
   56           *
C251 COMPILER V5.60.0,  direction                                                          24/05/24  23:20:51  PAGE 2   

   57           * @param err   外环输入值
   58           * @param dir_p
   59           * @param dir_i
   60           * @return int
   61           */
   62          int nh_Turn_Out(int err, float dir_p, float dir_i)
   63          {
   64   1        float error1 = 0;
   65   1        static float last_err = 0, P_out = 0, I_out = 0, out = 0;
   66   1        error1 = (err - Get_Gyro_Z * 20);
   67   1        if(error1<0.01&&error1>0.01)
   68   1          error1 = 0;
   69   1        P_out = dir_p * (error1 - last_err);
   70   1        I_out = dir_i * error1;
   71   1        if (I_out >= 2000)
   72   1          I_out = 2000;
   73   1        else if (I_out <= -2000)
   74   1          I_out = -2000;
   75   1        last_err = error1;
   76   1        out += P_out + I_out;
   77   1        return (int)out;
   78   1      }
   79          
   80          /**
   81           * @brief 方向环，串级PID给电机
   82           *
   83           * @return int
   84           */
   85          int DirControl(void)
   86          {
   87   1        static int count = 0;
   88   1        static int wh_out = 0;
   89   1        int nh_out = 0;
   90   1        if (count == 3)
   91   1        {
   92   2          wh_out = wh_Turn_Out(Inductance_Error, Wh_P, Wh_D);
   93   2          count = 0;
   94   2        }
   95   1        count++;
   96   1        return (int)nh_Turn_Out(wh_out, Nh_P, Nh_D);
   97   1      }
   98          
   99          /**
  100           * @brief 角度环
  101           *
  102           * @param target 目标角度
  103           * @param p
  104           * @param d
  105           * @return int
  106           */
  107          int Angle_Ring(double target, float p, float d)
  108          {
  109   1        float error;
  110   1        int Output, Angle_Speed;
  111   1        static float last_error, error2;
  112   1        gyro_z3 += Get_Gyro_Z;
  113   1        error = target - gyro_z3;
  114   1        error2 = error - last_error;
  115   1        last_error = error;
  116   1        Output = (int)(error * p + error2 * d);
  117   1        Output = limit(Output, 1000);
  118   1        Angle_Speed_Ring(Output, Angle_Speed_P, Angle_Speed_I);
  119   1        if (abs(error) <= 2) // 如何小于指定角度，表示角度ok
  120   1        {
  121   2          gyro_z3 = 0; // 角度积分清零
  122   2          last_error = 0;
C251 COMPILER V5.60.0,  direction                                                          24/05/24  23:20:51  PAGE 3   

  123   2          error2 = 0;
  124   2          return 1;
  125   2        }
  126   1        else
  127   1          return 0;
  128   1      }
*** WARNING C47 IN LINE 110 OF ..\USER\Hardware\direction.c: 'Angle_Speed': unreferenced local variable
  129          
  130          /**
  131           * @brief 角速度环
  132           *
  133           * @param err
  134           * @param dir_p
  135           * @param dir_i
  136           * @return int
  137           */
  138          int Angle_Speed_Ring(int err, float dir_p, float dir_i)
  139          {
  140   1        int error1 = 0;
  141   1        static float last_err = 0, nh_out = 0, P_out = 0, I_out = 0, out = 0;
  142   1        error1 = err - Get_Gyro_Z*10;
  143   1        P_out = dir_p * (error1 - last_err);
  144   1        I_out = dir_i * error1;
  145   1        if (I_out > 2000)
  146   1          I_out = 2000;
  147   1        if (I_out < -2000)
  148   1          I_out = -2000;
  149   1        out = P_out + I_out;
  150   1        nh_out += out;
  151   1        last_err = error1;
  152   1        nh_out = limit(nh_out, 9500);
  153   1        Motor_PWM(-nh_out, nh_out);
  154   1        return nh_out;
  155   1      }
  156          
  157          int DirControl_2(int16 chazhi, float dir_p, float dir_d, float dir_d2)
  158          {
*** WARNING C57 IN LINE 158 OF ..\USER\Hardware\direction.c: parameter 1: different from declaration
  159   1        float error;
  160   1        static float last_error = 0;
  161   1        float Output;
  162   1        float error_derivative;
  163   1      
  164   1        error = chazhi;
  165   1      
  166   1        error_derivative = error - last_error;
  167   1      
  168   1        Output = error * dir_p + error_derivative * dir_d + Get_Gyro_Z*10* dir_d2;
  169   1      
  170   1        last_error = error;
  171   1      
  172   1        Output = limit(Output, out_max);
  173   1        return (int)Output;
  174   1      }
  175          
  176          /**
  177           * @brief 控制车行驶的距离
  178           *
  179           * @param L_Distanc
  180           * @param R_Distance
  181           */
  182          int Car_Distance(int Distance)
  183          {
  184   1        static int bmq_jifen, flag = 1;
  185   1        bmq_jifen += (L_Pulse + R_Pulse) * 0.5;
  186   1        if (bmq_jifen <= Distance)
C251 COMPILER V5.60.0,  direction                                                          24/05/24  23:20:51  PAGE 4   

  187   1        {
  188   2          // LSpeed_pid_Out(20, L_Pulse);
  189   2          // RSpeed_pid_Out(20, R_Pulse);
  190   2          Motor_PWM(LSpeed_pid_Out(20, L_Pulse), RSpeed_pid_Out(20, R_Pulse));
  191   2        }
  192   1        else if (bmq_jifen > Distance)
  193   1        {
  194   2          if (Angle_Ring(90, 25, 1) == 1)
  195   2          {
  196   3            bmq_jifen = 0;
  197   3            L_Pulse = 0;
  198   3            R_Pulse = 0;
  199   3            gyro_z3 = 0;
  200   3          }
  201   2          return 1;
  202   2        }
  203   1      }
*** WARNING C180 IN LINE 202 OF ..\USER\Hardware\direction.c: 'Car_Distance': not every path returns a value
*** WARNING C180 IN LINE 202 OF ..\USER\Hardware\direction.c: 'Car_Distance': not every path returns a value


Module Information          Static   Overlayable
------------------------------------------------
  code size            =      1229     ------
  ecode size           =    ------     ------
  data size            =    ------     ------
  idata size           =    ------     ------
  pdata size           =    ------     ------
  xdata size           =    ------     ------
  xdata-const size     =    ------     ------
  edata size           =       186     ------
  bit size             =    ------     ------
  ebit size            =    ------     ------
  bitaddressable size  =    ------     ------
  ebitaddressable size =    ------     ------
  far data size        =    ------     ------
  huge data size       =    ------     ------
  const size           =    ------     ------
  hconst size          =       168     ------
End of Module Information.


C251 COMPILATION COMPLETE.  4 WARNING(S),  0 ERROR(S)
