C251 COMPILER V5.60.0,  encoder                                                            22/07/24  21:12:53  PAGE 1   


C251 COMPILER V5.60.0, COMPILATION OF MODULE encoder
OBJECT MODULE PLACED IN .\Out_File\encoder.obj
COMPILER INVOKED BY: F:\Keil_c251\C251\BIN\C251.EXE ..\USER\Hardware\encoder.c XSMALL WARNINGLEVEL(3) OPTIMIZE(0,SPEED) 
                    -BROWSE INCDIR(..\..\Libraries\libraries;..\..\Libraries\seekfree_libraries;..\..\Libraries\seekfree_peripheral;..\CODE;.
                    -.\USER\inc;..\USER\src;..\USER\Hardware;..\USER\Hardware) DEBUG PRINT(.\Out_File\encoder.lst) TABS(2) OBJECT(.\Out_File\
                    -encoder.obj) 

stmt  level    source

    1          #include "myconfig.h"
    2          
    3          int dir_out = 0, nh_out = 0;
    4          int L_Pulse = 0, R_Pulse = 0, Sum_Pulse = 0;
    5          
    6          int L_Dis = 0;
    7          int R_Dis = 0;
    8          
    9          double angle1 = 0.0;
   10          int speed = 75;
   11          float Ang = 0;
   12          int PWM_Out = 0;
   13          
   14          float L = 0, R = 0;
   15          
   16          int Elements_Flag = 1;
   17          
   18          // 30cm ������1688ֵ
   19          
   20          //--
   21          //  @brief      ???????????
   22          //  @param      void
   23          //  @return     void
   24          //--
   25          
   26          void Encoder_Time_Init(void)
   27          {
   28   1        pit_timer_ms(TIM_4, 2);
   29   1        gpio_mode(Encoder_L, GPI_IMPEDANCE);
   30   1        gpio_mode(Encoder_R, GPI_IMPEDANCE);
   31   1        ctimer_count_init(Encoder_L);
   32   1        ctimer_count_init(Encoder_R);
   33   1        EnableGlobalIRQ(); //???????��?
   34   1      }
   35          
   36          //--
   37          //  @brief      ??????????????
   38          //  @param      void
   39          //  @return     return : ?????
   40          //--
   41          
   42          int L_Encoder_Pulse(void)
   43          {
   44   1        static int L = 0;
   45   1        static int16 last_L;
   46   1        if (DIL == 1)
   47   1        {
   48   2          L = ctimer_count_read(Encoder_L);
   49   2        }
   50   1        else
   51   1        {
   52   2          L = -ctimer_count_read(Encoder_L);
*** WARNING C115 IN LINE 52 OF ..\USER\Hardware\encoder.c: '-' applied to unsigned type, result still unsigned
   53   2        }
   54   1        ctimer_count_clean(Encoder_L);
   55   1        last_L = L;
C251 COMPILER V5.60.0,  encoder                                                            22/07/24  21:12:53  PAGE 2   

   56   1        L *= 0.8;
   57   1        L += last_L * 0.2; // һ�׵�ͨ�˲�
   58   1        return L;
   59   1      }
   60          
   61          //--
   62          //  @brief      ??????????????
   63          //  @param      void
   64          //  @return     return : ?????
   65          //--
   66          int R_Encoder_Pulse(void)
   67          {
   68   1        static int R = 0;
   69   1        static int16 last_R;
   70   1        if (DIR == 0)
   71   1        {
   72   2          R = ctimer_count_read(Encoder_R);
   73   2        }
   74   1        else
   75   1        {
   76   2          R = -ctimer_count_read(Encoder_R);
*** WARNING C115 IN LINE 76 OF ..\USER\Hardware\encoder.c: '-' applied to unsigned type, result still unsigned
   77   2        }
   78   1        ctimer_count_clean(Encoder_R);
   79   1        last_R = R;
   80   1        R *= 0.8;
   81   1        R += last_R * 0.2; //һ�׵�ͨ�˲�
   82   1        return R;
   83   1      }
   84          
   85          //--
   86          //  @brief      ?????????
   87          //  @param      void
   88          //  @return     void
   89          //--
   90          void Encoder_Read_Pulse(void)
   91          {
   92   1        L_Encoder_Pulse();
   93   1        R_Encoder_Pulse();
   94   1      }
   95          //--
   96          //  @brief      ???????????
   97          //  @param      L_cont??R_cont?????????
   98          //  @return     void
   99          //--
  100          int L_Enc_integral(int L_target)
  101          {
  102   1        static int L = 0, L_flag;
  103   1        L += L_Encoder_Pulse();
  104   1        if (L > L_target)
  105   1        {
  106   2          L_flag = 1;
  107   2        }
  108   1        if (L_flag == 1)
  109   1        {
  110   2          L = 0;
  111   2          L_flag = 0;
  112   2          return 0;
  113   2        }
  114   1        return 1;
  115   1      }
  116          
  117          int R_Enc_integral(int R_target)
  118          {
  119   1        static int R = 0, R_flag;
  120   1        R += R_Encoder_Pulse();
C251 COMPILER V5.60.0,  encoder                                                            22/07/24  21:12:53  PAGE 3   

  121   1        if (R > R_target)
  122   1        {
  123   2          R_flag = 1;
  124   2        }
  125   1        if (R_flag == 1)
  126   1        {
  127   2          R_flag = 0;
  128   2          R = 0;
  129   2          return 0;
  130   2        }
  131   1        return 1;
  132   1      }
  133          /**
  134           * @brief ��ʻһ�ξ���ֹͣ
  135           *
  136           * @param Distance ����
  137           * @param Speed    �ٶ�
  138           */
  139          int Car_Star_Stop(int Distance,int speed)
  140          {
  141   1        static int Distance1=0;
  142   1        Distance1 += (L_Pulse + R_Pulse) / 2;
  143   1        Motor_PWM(speed, speed);
  144   1        if (Distance1>Distance)
  145   1        {
  146   2          Distance1 = 0;
  147   2          Motor_PWM(0, 0);
  148   2          return 1;
  149   2        }
  150   1        return 0;
  151   1      }
  152          
  153          void TM4_Isr() interrupt 20
  154          {
  155   1        static int count = 0, OUT1, OUT2, groy = 0, Huan_Flag = 0,jifen=0,time2=0,pwm;
  156   1        int flag = 0;
  157   1        int nh = 0;
  158   1        if (Car_Start_Flag)
  159   1        {
  160   2          dl1a_get_distance();
  161   2          mpu6050_get_gyro();
  162   2          L_Pulse = L_Encoder_Pulse();
  163   2          R_Pulse = R_Encoder_Pulse();
  164   2          NORMALIZATION_TRACKING_ADC();
  165   2          //Buzzer_ON;
  166   2          Sum_Pulse = (L_Pulse + R_Pulse) * 0.5;
  167   2          gyro_z3 += (mpu6050_gyro_z - 7) * 0.000135;
  168   2          //Ԫ��˳����
  169   2          Elements_Flag = Elements_List[Elements_Num];
  170   2          switch (Elements_Flag)
  171   2          {
  172   3          case 1:
  173   3            LRoundabout();
  174   3            break;
  175   3          case 2:
  176   3            RRoundabout();
  177   3            break;
  178   3          case 3:
  179   3            Ramp();
  180   3            Error_Speed();
*** WARNING C140 IN LINE 180 OF ..\USER\Hardware\encoder.c: 'Error_Speed' undefined; assuming 'extern int Error_Speed()'
  181   3            break;
  182   3          case 4:
  183   3            RObstacle();
  184   3            Error_Speed();
  185   3            break;
C251 COMPILER V5.60.0,  encoder                                                            22/07/24  21:12:53  PAGE 4   

  186   3          default:
  187   3            Error_Speed();
  188   3            break;
  189   3          }
  190   2          Tracking(speed+Err_speed); // 72�ٶ�Ϊ2m/s
  191   2          // dir_out = Angle_Ring(90, gyro_z3);
  192   2          // Motor_PWM(dir_out, -dir_out);
  193   2          // Motor_PWM(6500,3500);
  194   2          //  }
  195   2          //         Buzzer_OFF;
  196   2          //
  197   2          //        P15 = 0;
  198   2          //   Rotary_Plug(500);//һ��ת�£���ͣ��
  199   2          //   Rotary_Plug(500);
  200   2          TIM4_CLEAR_FLAG;
  201   2        }
  202   1      }
  203          
  204          
  205          
  206          
  207          
  208          
  209          
  210          
  211          
  212          
  213          
  214          
  215          
  216          
  217          
  218          
  219          
  220          
  221          
  222          
  223          
  224          //*********ʮ�Ž�Ĺ��¾͵��������END**************/


Module Information          Static   Overlayable
------------------------------------------------
  code size            =       764     ------
  ecode size           =    ------     ------
  data size            =    ------     ------
  idata size           =    ------     ------
  pdata size           =    ------     ------
  xdata size           =    ------     ------
  xdata-const size     =    ------     ------
  edata size           =        82     ------
  bit size             =    ------     ------
  ebit size            =    ------     ------
  bitaddressable size  =    ------     ------
  ebitaddressable size =    ------     ------
  far data size        =    ------     ------
  huge data size       =    ------     ------
  const size           =    ------     ------
  hconst size          =       152     ------
End of Module Information.


C251 COMPILATION COMPLETE.  3 WARNING(S),  0 ERROR(S)
