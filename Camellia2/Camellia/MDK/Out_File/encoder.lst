C251 COMPILER V5.60.0,  encoder                                                            22/05/24  15:46:29  PAGE 1   


C251 COMPILER V5.60.0, COMPILATION OF MODULE encoder
OBJECT MODULE PLACED IN .\Out_File\encoder.obj
COMPILER INVOKED BY: E:\Keil5C251\C251\BIN\C251.EXE ..\USER\Hardware\encoder.c XSMALL WARNINGLEVEL(3) OPTIMIZE(0,SPEED) 
                    -BROWSE INCDIR(..\..\Libraries\libraries;..\..\Libraries\seekfree_libraries;..\..\Libraries\seekfree_peripheral;..\CODE;.
                    -.\USER\inc;..\USER\src;..\USER\Hardware;..\USER\Hardware) DEBUG PRINT(.\Out_File\encoder.lst) TABS(2) OBJECT(.\Out_File\
                    -encoder.obj) 

stmt  level    source

    1          #include "myconfig.h"
    2          
    3          int dir_out = 0, nh_out = 0;
    4          int L_Pulse = 0, R_Pulse = 0, Sum_Pulse = 0;
    5          
    6          int L_Dis = 0;
    7          int R_Dis = 0;
    8          
    9          double angle1 = 0.0;
   10          int speed = 105;
   11          float Ang = 0;
   12          int PWM_Out = 0;
   13          
   14          float L = 0, R = 0;
   15          //--
   16          //  @brief      ???????????
   17          //  @param      void
   18          //  @return     void
   19          //--
   20          
   21          void Encoder_Time_Init(void)
   22          {
   23   1        pit_timer_ms(TIM_4, 2);
   24   1        gpio_mode(Encoder_L, GPI_IMPEDANCE);
   25   1        gpio_mode(Encoder_R, GPI_IMPEDANCE);
   26   1        ctimer_count_init(Encoder_L);
   27   1        ctimer_count_init(Encoder_R);
   28   1        EnableGlobalIRQ(); //???????锟斤拷?
   29   1      }
   30          
   31          //--
   32          //  @brief      ??????????????
   33          //  @param      void
   34          //  @return     return : ?????
   35          //--
   36          
   37          int L_Encoder_Pulse(void)
   38          {
   39   1        if (DIL == 1)
   40   1        {
   41   2          L_Pulse = ctimer_count_read(Encoder_L);
   42   2        }
   43   1        else
   44   1        {
   45   2          L_Pulse = -ctimer_count_read(Encoder_L);
*** WARNING C115 IN LINE 45 OF ..\USER\Hardware\encoder.c: '-' applied to unsigned type, result still unsigned
   46   2        }
   47   1        ctimer_count_clean(Encoder_L);
   48   1        return L_Pulse;
   49   1      }
   50          
   51          //--
   52          //  @brief      ??????????????
   53          //  @param      void
   54          //  @return     return : ?????
   55          //--
C251 COMPILER V5.60.0,  encoder                                                            22/05/24  15:46:29  PAGE 2   

   56          int R_Encoder_Pulse(void)
   57          {
   58   1        if (DIR == 0)
   59   1        {
   60   2          R_Pulse = ctimer_count_read(Encoder_R);
   61   2        }
   62   1        else
   63   1        {
   64   2          R_Pulse = -ctimer_count_read(Encoder_R);
*** WARNING C115 IN LINE 64 OF ..\USER\Hardware\encoder.c: '-' applied to unsigned type, result still unsigned
   65   2        }
   66   1        ctimer_count_clean(Encoder_R);
   67   1        return R_Pulse;
   68   1      }
   69          
   70          //--
   71          //  @brief      ?????????
   72          //  @param      void
   73          //  @return     void
   74          //--
   75          void Encoder_Read_Pulse(void)
   76          {
   77   1        L_Encoder_Pulse();
   78   1        R_Encoder_Pulse();
   79   1      }
   80          //--
   81          //  @brief      ???????????
   82          //  @param      L_cont??R_cont?????????
   83          //  @return     void
   84          //--
   85          int L_Enc_integral(int L_target)
   86          {
   87   1        static int L = 0, L_flag;
   88   1        L += L_Encoder_Pulse();
   89   1        if (L > L_target)
   90   1        {
   91   2          L_flag = 1;
   92   2        }
   93   1        if (L_flag == 1)
   94   1        {
   95   2          L = 0;
   96   2          L_flag = 0;
   97   2          return 0;
   98   2        }
   99   1        return 1;
  100   1      }
  101          
  102          int R_Enc_integral(int R_target)
  103          {
  104   1        static int R = 0, R_flag;
  105   1        R += R_Encoder_Pulse();
  106   1        if (R > R_target)
  107   1        {
  108   2          R_flag = 1;
  109   2        }
  110   1        if (R_flag == 1)
  111   1        {
  112   2          R_flag = 0;
  113   2          R = 0;
  114   2          return 0;
  115   2        }
  116   1        return 1;
  117   1      }
  118          
  119          void TM4_Isr() interrupt 20
  120          {
C251 COMPILER V5.60.0,  encoder                                                            22/05/24  15:46:29  PAGE 3   

  121   1        static int count = 0, OUT1, OUT2, groy = 0, Huan_Flag = 0;
  122   1        int nh = 0;
  123   1        if (Car_Start_Flag)
  124   1        {
  125   2          imu660ra_get_gyro();
  126   2          dl1a_get_distance();
  127   2          L_Pulse = L_Encoder_Pulse() * 0.7;
  128   2          R_Pulse = R_Encoder_Pulse() * 0.7;
  129   2          NORMALIZATION_TRACKING_ADC(1, 1);
  130   2          gyro_z3 += Get_Gyro_Z;
  131   2          // LRoundabout();
  132   2          //  Angle_Ring1(90, 0.85,0.28);  //这个参数可以 5/19
  133   2          //  PWM_Out = LSpeed_pid_Out(15, L_Pulse);
  134   2          //  OUT2 = RSpeed_pid_Out(15, R_Pulse);
  135   2          //  Motor_PWM(0, 1500);
  136   2          // Tracking(10);
  137   2          //  OUT1=nh_Turn_Out(0, Nh_P, Nh_D);
  138   2          // Buzzer_OFF;
  139   2          //  Motor_PWM(PWM_Out, OUT2);
  140   2          TIM4_CLEAR_FLAG;
  141   2        }
  142   1      }


Module Information          Static   Overlayable
------------------------------------------------
  code size            =       488     ------
  ecode size           =    ------     ------
  data size            =    ------     ------
  idata size           =    ------     ------
  pdata size           =    ------     ------
  xdata size           =    ------     ------
  xdata-const size     =    ------     ------
  edata size           =        58     ------
  bit size             =    ------     ------
  ebit size            =    ------     ------
  bitaddressable size  =    ------     ------
  ebitaddressable size =    ------     ------
  far data size        =    ------     ------
  huge data size       =    ------     ------
  const size           =    ------     ------
  hconst size          =       116     ------
End of Module Information.


C251 COMPILATION COMPLETE.  2 WARNING(S),  0 ERROR(S)
