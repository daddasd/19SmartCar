C251 COMPILER V5.60.0,  encoder                                                            18/07/24  15:58:36  PAGE 1   


C251 COMPILER V5.60.0, COMPILATION OF MODULE encoder
OBJECT MODULE PLACED IN .\Out_File\encoder.obj
COMPILER INVOKED BY: F:\Keil_c251\C251\BIN\C251.EXE ..\USER\Hardware\encoder.c XSMALL WARNINGLEVEL(3) OPTIMIZE(0,SPEED) 
                    -BROWSE INCDIR(..\..\Libraries\libraries;..\..\Libraries\seekfree_libraries;..\..\Libraries\seekfree_peripheral;..\CODE;.
                    -.\USER\inc;..\USER\src;..\USER\Hardware;..\USER\Hardware) DEBUG PRINT(.\Out_File\encoder.lst) TABS(2) OBJECT(.\Out_File\
                    -encoder.obj) 

stmt  level    source

    1          #include "myconfig.h"
    2          
    3          int dir_out = 0, nh_out = 0;
    4          int L_Pulse = 0, R_Pulse = 0, Sum_Pulse = 0;
    5          
    6          int L_Dis = 0;
    7          int R_Dis = 0;
    8          
    9          double angle1 = 0.0;
   10          int speed = 90;
   11          float Ang = 0;
   12          int PWM_Out = 0;
   13          
   14          float L = 0, R = 0;
   15          
   16          
   17          //30cm 编码器1688值
   18          
   19          //--
   20          //  @brief      ???????????
   21          //  @param      void
   22          //  @return     void
   23          //--
   24          
   25          void Encoder_Time_Init(void)
   26          {
   27   1        pit_timer_ms(TIM_4, 2);
   28   1        gpio_mode(Encoder_L, GPI_IMPEDANCE);
   29   1        gpio_mode(Encoder_R, GPI_IMPEDANCE);
   30   1        ctimer_count_init(Encoder_L);
   31   1        ctimer_count_init(Encoder_R);
   32   1        EnableGlobalIRQ(); //???????锟斤拷?
   33   1      }
   34          
   35          //--
   36          //  @brief      ??????????????
   37          //  @param      void
   38          //  @return     return : ?????
   39          //--
   40          
   41          int L_Encoder_Pulse(void)
   42          {
   43   1        static int L = 0;
   44   1        static int16 last_L;
   45   1        if (DIL == 1)
   46   1        {
   47   2          L = ctimer_count_read(Encoder_L);
   48   2        }
   49   1        else
   50   1        {
   51   2          L = -ctimer_count_read(Encoder_L);
*** WARNING C115 IN LINE 51 OF ..\USER\Hardware\encoder.c: '-' applied to unsigned type, result still unsigned
   52   2        }
   53   1        ctimer_count_clean(Encoder_L);
   54   1        last_L = L;
   55   1        L *= 0.8;
C251 COMPILER V5.60.0,  encoder                                                            18/07/24  15:58:36  PAGE 2   

   56   1        L += last_L * 0.2; // 一阶低通滤波
   57   1        return L;
   58   1      }
   59          
   60          //--
   61          //  @brief      ??????????????
   62          //  @param      void
   63          //  @return     return : ?????
   64          //--
   65          int R_Encoder_Pulse(void)
   66          {
   67   1        static int R = 0;
   68   1        static int16 last_R;
   69   1        if (DIR == 0)
   70   1        {
   71   2          R = ctimer_count_read(Encoder_R);
   72   2        }
   73   1        else
   74   1        {
   75   2          R = -ctimer_count_read(Encoder_R);
*** WARNING C115 IN LINE 75 OF ..\USER\Hardware\encoder.c: '-' applied to unsigned type, result still unsigned
   76   2        }
   77   1        ctimer_count_clean(Encoder_R);
   78   1        last_R = R;
   79   1        R *= 0.8;
   80   1        R += last_R * 0.2; //一阶低通滤波
   81   1        return R;
   82   1      }
   83          
   84          //--
   85          //  @brief      ?????????
   86          //  @param      void
   87          //  @return     void
   88          //--
   89          void Encoder_Read_Pulse(void)
   90          {
   91   1        L_Encoder_Pulse();
   92   1        R_Encoder_Pulse();
   93   1      }
   94          //--
   95          //  @brief      ???????????
   96          //  @param      L_cont??R_cont?????????
   97          //  @return     void
   98          //--
   99          int L_Enc_integral(int L_target)
  100          {
  101   1        static int L = 0, L_flag;
  102   1        L += L_Encoder_Pulse();
  103   1        if (L > L_target)
  104   1        {
  105   2          L_flag = 1;
  106   2        }
  107   1        if (L_flag == 1)
  108   1        {
  109   2          L = 0;
  110   2          L_flag = 0;
  111   2          return 0;
  112   2        }
  113   1        return 1;
  114   1      }
  115          
  116          int R_Enc_integral(int R_target)
  117          {
  118   1        static int R = 0, R_flag;
  119   1        R += R_Encoder_Pulse();
  120   1        if (R > R_target)
C251 COMPILER V5.60.0,  encoder                                                            18/07/24  15:58:36  PAGE 3   

  121   1        {
  122   2          R_flag = 1;
  123   2        }
  124   1        if (R_flag == 1)
  125   1        {
  126   2          R_flag = 0;
  127   2          R = 0;
  128   2          return 0;
  129   2        }
  130   1        return 1;
  131   1      }
  132          /**
  133           * @brief 行驶一段距离停止
  134           *
  135           * @param Distance 距离
  136           * @param Speed    速度
  137           */
  138          int Car_Star_Stop(int Distance,int speed)
  139          {
  140   1        static int Distance1=0;
  141   1        Distance1 += (L_Pulse + R_Pulse) / 2;
  142   1        Motor_PWM(speed, speed);
  143   1        if (Distance1>Distance)
  144   1        {
  145   2          Distance1 = 0;
  146   2          Motor_PWM(0, 0);
  147   2          return 1;
  148   2        }
  149   1        return 0;
  150   1      }
  151          
  152          void TM4_Isr() interrupt 20
  153          {
  154   1        static int count = 0, OUT1, OUT2, groy = 0, Huan_Flag = 0,jifen=0,time2=0,pwm;
  155   1        int flag = 0;
  156   1        int nh = 0;
  157   1        if (Car_Start_Flag)
  158   1        {
  159   2          dl1a_get_distance();
  160   2          mpu6050_get_gyro();
  161   2          L_Pulse = L_Encoder_Pulse();
  162   2          R_Pulse = R_Encoder_Pulse();
  163   2          NORMALIZATION_TRACKING_ADC();
  164   2          //Buzzer_ON;
  165   2          Sum_Pulse = (L_Pulse + R_Pulse) * 0.5;
  166   2          gyro_z3 += (mpu6050_gyro_z - 7) * 0.000135;
  167   2          //元素顺序定死
  168   2          switch (Elements_Num)
  169   2          {
  170   3          case 0:
  171   3            RObstacle();
  172   3            break;
  173   3          case 1:
  174   3            Ramp();
  175   3            break;
  176   3          case 2:
  177   3            RRoundabout();
  178   3            break;
  179   3          default:
  180   3            Error_Speed();
*** WARNING C140 IN LINE 180 OF ..\USER\Hardware\encoder.c: 'Error_Speed' undefined; assuming 'extern int Error_Speed()'
  181   3            break;
  182   3          }
  183   2          Tracking(speed + Err_speed); // 72速度为2m/s
  184   2          //dir_out=Angle_Ring(90, gyro_z3);
  185   2          //dir_out = Angle_Speed_Ring(0);
C251 COMPILER V5.60.0,  encoder                                                            18/07/24  15:58:36  PAGE 4   

  186   2          //Motor_PWM(dir_out, -dir_out);
  187   2          //  Motor_PWM(6500,3500);
  188   2          //  }
  189   2          //         Buzzer_OFF;
  190   2          //
  191   2          //        P15 = 0;
  192   2          //   Rotary_Plug(500);//一秒转堵，就停。
  193   2          //   Rotary_Plug(500);
  194   2          TIM4_CLEAR_FLAG;
  195   2        }
  196   1      }
  197          
  198          
  199          
  200          
  201          
  202          
  203          
  204          
  205          
  206          
  207          
  208          
  209          
  210          
  211          
  212          
  213          
  214          
  215          
  216          
  217          
  218          //*********十九届的故事就到这结束了END**************/


Module Information          Static   Overlayable
------------------------------------------------
  code size            =       732     ------
  ecode size           =    ------     ------
  data size            =    ------     ------
  idata size           =    ------     ------
  pdata size           =    ------     ------
  xdata size           =    ------     ------
  xdata-const size     =    ------     ------
  edata size           =        80     ------
  bit size             =    ------     ------
  ebit size            =    ------     ------
  bitaddressable size  =    ------     ------
  ebitaddressable size =    ------     ------
  far data size        =    ------     ------
  huge data size       =    ------     ------
  const size           =    ------     ------
  hconst size          =       146     ------
End of Module Information.


C251 COMPILATION COMPLETE.  3 WARNING(S),  0 ERROR(S)
