C251 COMPILER V5.60.0,  menu                                                               06/05/24  21:16:29  PAGE 1   


C251 COMPILER V5.60.0, COMPILATION OF MODULE menu
OBJECT MODULE PLACED IN .\Out_File\menu.obj
COMPILER INVOKED BY: E:\Keil5C251\C251\BIN\C251.EXE ..\USER\Hardware\menu.c XSMALL WARNINGLEVEL(3) OPTIMIZE(0,SPEED) BRO
                    -WSE INCDIR(..\..\Libraries\libraries;..\..\Libraries\seekfree_libraries;..\..\Libraries\seekfree_peripheral;..\CODE;..\U
                    -SER\inc;..\USER\src;..\USER\Hardware;..\USER\Hardware) DEBUG PRINT(.\Out_File\menu.lst) TABS(2) OBJECT(.\Out_File\menu.o
                    -bj) 

stmt  level    source

    1          #include <menu.h>
    2          #include "zf_gpio.h"
    3          #include "SEEKFREE_OLED.h"
    4          #include "zf_delay.h"
    5          #include "myconfig.h"
    6          
    7          #define MENU_SIZE 4
    8          #define INTERVAL_TIME 500
    9          
   10          
   11          //位置环外环
   12          
   13          
   14          //--
   15          //  @brief      起始菜单显示一些初始值
   16          //  @param      void    
   17          //  @return     1 按KEY2跳转一级菜单      
   18          //--
   19          int Show_AllVal(int flag1)
   20          {
   21   1          int flag = flag1;
   22   1          while (flag == 0)
   23   1          {
   24   2              NORMALIZATION_TRACKING_ADC(1,1);
   25   2              show_val();  // 显示测得数据 
   26   2              
   27   2              if (key2 == 0) // 按下跳转到一级菜单
   28   2              {
   29   3                  delay_ms(10);
   30   3                  while (key2 == 0);
   31   3                  delay_ms(10);
   32   3                  oled_fill(0x00); // 清屏
   33   3                  flag = 1;
   34   3                  return 1;
   35   3              }
   36   2          }
   37   1          return 1;
   38   1      }
   39          
   40          //--
   41          //  @brief      一级菜单
   42          //  @param      void    
   43          //  @return     1 按KEY2跳转一级菜单      
   44          //--
   45          int First_menu(void)
   46          {
   47   1        int flag = 1;
   48   1        int c,a=0;
   49   1        oled_p6x8str(25,0,"Set_Element"); //调整元素
   50   1        oled_p6x8str(25,1,"Set_Motor_PI"); //设置电机pi
   51   1        oled_p6x8str(25,2,"Set_Wh_Nh_PD"); //设置内外环pd
   52   1        oled_p6x8str(25,3,"Set_Speed"); //设置速度
   53   1        oled_p6x8str(25,4,"Show_Val"); //显示基础值
   54   1        oled_p6x8str(25,5,"Car_Star"); //小车启动
   55   1        while(1)
   56   1        {
C251 COMPILER V5.60.0,  menu                                                               06/05/24  21:16:29  PAGE 2   

   57   2              if(key3==0) // 下一项
   58   2          {
   59   3            delay_ms(10);
   60   3            while(key3==0);
   61   3            delay_ms(10);
   62   3            flag++;
   63   3            if(flag == 7) flag = 1;
   64   3          }
   65   2          if(key1==0) // 上一项
   66   2          {
   67   3            delay_ms(10);
   68   3            while(key1==0);
   69   3            delay_ms(10);
   70   3            flag--;
   71   3            if(flag == 0) flag = 6;
   72   3          }
   73   2          if(key2 == 0) //确定
   74   2          {
   75   3            delay_ms(10);
   76   3            while(key2 ==0);
   77   3            delay_ms(10);
   78   3            oled_fill(0x00); //清屏
   79   3            return flag; // 返回选择的选项
   80   3          }
   81   2          if(key4 == 0) //返回上级
   82   2          {
   83   3            delay_ms(10);
   84   3            while(key4 ==0);
   85   3            delay_ms(10);
   86   3            oled_fill(0x00); //清屏
   87   3            return 0; 
   88   3          }
   89   2          switch(flag) //光标移动
   90   2          {
   91   3            case 1:
   92   3            {
   93   4              oled_p6x8str(0,0,"-->"); 
   94   4              oled_p6x8str(0,1,"   "); 
   95   4              oled_p6x8str(0,2,"   ");
   96   4              oled_p6x8str(0,3,"   ");
   97   4              oled_p6x8str(0,4,"   ");
   98   4              oled_p6x8str(0,5,"   ");
   99   4            }break;
  100   3            case 2:
  101   3            {
  102   4              oled_p6x8str(0,0,"   "); 
  103   4              oled_p6x8str(0,1,"-->"); 
  104   4              oled_p6x8str(0,2,"   ");
  105   4              oled_p6x8str(0,3,"   ");
  106   4              oled_p6x8str(0,4,"   ");
  107   4              oled_p6x8str(0,5,"   ");
  108   4            }break;
  109   3            case 3:
  110   3            {
  111   4              oled_p6x8str(0,0,"   "); 
  112   4              oled_p6x8str(0,1,"   "); 
  113   4              oled_p6x8str(0,2,"-->");
  114   4              oled_p6x8str(0,3,"   ");
  115   4              oled_p6x8str(0,4,"   ");
  116   4              oled_p6x8str(0,5,"   ");
  117   4            }break;
  118   3            case 4:
  119   3            {
  120   4              oled_p6x8str(0,0,"   "); 
  121   4              oled_p6x8str(0,1,"   "); 
  122   4              oled_p6x8str(0,2,"   ");
C251 COMPILER V5.60.0,  menu                                                               06/05/24  21:16:29  PAGE 3   

  123   4              oled_p6x8str(0,3,"-->");
  124   4              oled_p6x8str(0,4,"   ");
  125   4              oled_p6x8str(0,5,"   ");
  126   4            }break;
  127   3            case 5:
  128   3            {
  129   4              oled_p6x8str(0,0,"   "); 
  130   4              oled_p6x8str(0,1,"   "); 
  131   4              oled_p6x8str(0,2,"   ");
  132   4              oled_p6x8str(0,3,"   ");
  133   4              oled_p6x8str(0,4,"-->");
  134   4              oled_p6x8str(0,5,"   ");
  135   4            }break;
  136   3            case 6:
  137   3            {
  138   4              oled_p6x8str(0,0,"   "); 
  139   4              oled_p6x8str(0,1,"   "); 
  140   4              oled_p6x8str(0,2,"   ");
  141   4              oled_p6x8str(0,3,"   ");
  142   4              oled_p6x8str(0,4,"   ");
  143   4              oled_p6x8str(0,5,"-->");
  144   4            }break;
  145   3          }
  146   2        }
  147   1      }
*** WARNING C47 IN LINE 48 OF ..\USER\Hardware\menu.c: 'c': unreferenced local variable
  148          
  149          //--
  150          //  @brief      二级元素顺序菜单
  151          //  @param      void    
  152          //  @return     0 退出二级菜单    
  153          //--
  154          
  155          
  156          
  157          int Second_Element_menu(void)
  158          {
  159   1          int flag = 1,i = 0,Order = 0,k =0;
  160   1          int menu_order[MENU_SIZE] = {0}; // 用于存储菜单项的顺序
  161   1          
  162   1          oled_p8x16str(25, 0, "L_YuanH");  // 左圆环
  163   1          oled_p8x16str(25, 2, "R_YuanH");  // 右圆环
  164   1          oled_p8x16str(25, 4, "PoDao");    // 坡道
  165   1          oled_p8x16str(25, 6, "LuZhang");      // 路障
  166   1          
  167   1          while (1)
  168   1          {
  169   2              if (key3 == 0) // 下一项
  170   2              {
  171   3                  delay_ms(10);
  172   3                  while (key3 == 0);
  173   3                  delay_ms(10);
  174   3                  flag++;
  175   3                  if (flag == MENU_SIZE + 1) flag = 1;
  176   3              }
  177   2              if (key1 == 0) // 上一项
  178   2              {
  179   3                  delay_ms(10);
  180   3                  while (key1 == 0);
  181   3                  delay_ms(10);
  182   3                  flag--;
  183   3                  if (flag == 0) flag = MENU_SIZE;
  184   3              }
  185   2              if (key2 == 0) // 确定
  186   2              {
  187   3                  delay_ms(10);
C251 COMPILER V5.60.0,  menu                                                               06/05/24  21:16:29  PAGE 4   

  188   3                  while (key2 == 0);
  189   3                  delay_ms(10);
  190   3                  Order++;
  191   3                  if(Order == 5){
  192   4                    for(k=0;k<4;k++)
  193   4                    {
  194   5                      Element_Order[k]=menu_order[k];
  195   5                    }
  196   4                    oled_fill(0x00); //清屏
  197   4                    return 0;  //返回上一级
  198   4                  }
  199   3                  menu_order[flag-1] = Order;
  200   3              } 
  201   2              if(key4 == 0) //返回上级
  202   2              {
  203   3                delay_ms(10);
  204   3                while(key4 ==0);
  205   3                delay_ms(10);
  206   3                oled_fill(0x00); //清屏
  207   3                return 0; // 返回选择的选项
  208   3              }
  209   2              // 更新光标位置和显示顺序
  210   2              for (i = 0; i < MENU_SIZE; i++)
  211   2              {
  212   3                  if (i + 1 == flag)
  213   3                      oled_p8x16str(0, i*2, "-->");  // 光标指示当前选中项
*** WARNING C188 IN LINE 213 OF ..\USER\Hardware\menu.c: 'parameter 2': value truncated
  214   3                  else
  215   3                      oled_p8x16str(0, i*2, "   ");
*** WARNING C188 IN LINE 215 OF ..\USER\Hardware\menu.c: 'parameter 2': value truncated
  216   3                      
  217   3                  // 在菜单项后显示顺序
  218   3                  oled_uint16_px8(80, i*2, menu_order[i]);
*** WARNING C188 IN LINE 218 OF ..\USER\Hardware\menu.c: 'parameter 2': value truncated
  219   3              } 
  220   2        }
  221   1      }
  222          
  223          //--
  224          //  @brief      二级调节电机PI菜单
  225          //  @param      void    
  226          //  @return     0 退出二级菜单    
  227          //--
  228          
  229          int Second_Motor_menu(void)
  230          {
  231   1          int flag = 0, Val_add_lose = 1, i = 0, count = 0;
  232   1          int16 long_press_delay = 0;
  233   1          int pree_delay = 0;
  234   1          double x = 0.0001;
  235   1          
  236   1          oled_p8x16str(20, 0, "M_P"); 
  237   1          oled_printf_float_px8(50, 0, Motor_P, 2, 4); // 电机P
  238   1          oled_p8x16str(20, 2, "M_I"); 
  239   1          oled_printf_float_px8(50, 2, Motor_I, 2, 4); // 电机I
  240   1          oled_p8x16str(20, 4, "Add");   // 加值
  241   1          oled_p8x16str(20, 6, "Val");   // 加几倍或者减几倍
  242   1          
  243   1          while (1)
  244   1          {
  245   2              if (key3 == 0) // 下一项
  246   2              {
  247   3                  delay_ms(10);
  248   3                  while (key3 == 0);
  249   3                  delay_ms(10);
  250   3                  flag++;
C251 COMPILER V5.60.0,  menu                                                               06/05/24  21:16:29  PAGE 5   

  251   3                  if (flag == 5) flag = 1;
  252   3              }
  253   2              if (key1 == 0) // 上一项
  254   2              {
  255   3                  delay_ms(10);
  256   3                  while (key1 == 0);
  257   3                  delay_ms(10);
  258   3                  flag--;
  259   3                  if (flag == 0) flag = 4;
  260   3              } 
  261   2              if (key2 == 0) // 确定
  262   2              {
  263   3                  delay_ms(10);
  264   3                  long_press_delay = 0;
  265   3                  
  266   3                  while (key2 == 0)
  267   3                  {
  268   4                      delay_ms(10);
  269   4                      long_press_delay += 10;
  270   4                      
  271   4                      if (long_press_delay >= INTERVAL_TIME - pree_delay)
  272   4                      {
  273   5                          if (flag == 1)
  274   5                          {
  275   6                              oled_printf_float_px8(50, 0, Motor_P, 2, 4);
  276   6                              Motor_P = Motor_P + x * Val_add_lose;
  277   6                          }
  278   5                          if (flag == 2)
  279   5                          {
  280   6                              Motor_I = Motor_I + x * Val_add_lose;
  281   6                              oled_printf_float_px8(50, 2, Motor_I, 2, 4);
  282   6                          }
  283   5                          pree_delay += 150;
  284   5                          if (pree_delay > 1000) pree_delay = 1000;
  285   5                          long_press_delay = 0;
  286   5                      }
  287   4                  }
  288   3                  delay_ms(10);
  289   3                  if (long_press_delay < 800)
  290   3                  {
  291   4                      pree_delay = 0;
  292   4                      if (flag == 1)
  293   4                      {
  294   5                          oled_printf_float_px8(50, 0, Motor_P, 2, 4);
  295   5                          Motor_P = Motor_P + x * Val_add_lose;
  296   5                      }
  297   4                      if (flag == 2)
  298   4                      {
  299   5                          Motor_I = Motor_I + x * Val_add_lose;
  300   5                          oled_printf_float_px8(50, 2, Motor_I, 2, 4);
  301   5                      }
  302   4                      if (flag == 3)
  303   4                      {
  304   5                          if (count == 0)
  305   5                          {
  306   6                              oled_p8x16str(20, 4, "    ");   // 减值
  307   6                              oled_p8x16str(20, 4, "Lose");   // 减值
  308   6                              Val_add_lose = -1;
  309   6                              count = 1;
  310   6                          }
  311   5                          else if (count == 1)
  312   5                          {
  313   6                              oled_p8x16str(20, 4, "    ");   // 加值
  314   6                              oled_p8x16str(20, 4, "Add");    // 加值
  315   6                              Val_add_lose = 1;
  316   6                              count = 0;
C251 COMPILER V5.60.0,  menu                                                               06/05/24  21:16:29  PAGE 6   

  317   6                          }
  318   5                      }
  319   4                      if (flag == 4)
  320   4                      {
  321   5                          x = x + 0.0001 * Val_add_lose;
  322   5                          oled_printf_float_px8(50, 6, x, 1, 4);
  323   5                      }
  324   4                  }
  325   3              } 
  326   2              if (key4 == 0)  // 返回
  327   2              {
  328   3                  delay_ms(10);
  329   3                  while (key4 == 0);
  330   3                  delay_ms(10);
  331   3                  oled_fill(0x00); // 清屏
  332   3                  return 0; // 返回选择的选项
  333   3              }
  334   2              for (i = 0; i < 4; i++)
  335   2              {
  336   3                  if (i + 1 == flag)
  337   3                      oled_p8x16str(0, i*2, "->");  // 光标指示当前选中项
*** WARNING C188 IN LINE 337 OF ..\USER\Hardware\menu.c: 'parameter 2': value truncated
  338   3                  else
  339   3                      oled_p8x16str(0, i*2, "  ");
*** WARNING C188 IN LINE 339 OF ..\USER\Hardware\menu.c: 'parameter 2': value truncated
  340   3              } 
  341   2          }
  342   1      }
  343          //--
  344          //  @brief      二级调节内外环PD菜单
  345          //  @param      void    
  346          //  @return     0 退出二级菜单    
  347          //--
  348          // 定义菜单大小
  349          
  350          // 定义菜单大小
  351          #define MENU_SIZE 4
  352          
  353          
  354          
  355          int Second__NWHuan_menu(void)
  356          {
  357   1          int flag = 1, i = 0,Val_add_lose=1,count=-1,flag1=-1;
  358   1          float x =1,x1=0.005;
  359   1          uint16 long_press_delay=0,pree_delay=0;
  360   1          int page = 1; // 用于跟踪当前所在页面
  361   1          int page1 = 1;
  362   1          if(page == 1)
  363   1          {
  364   2                  oled_fill(0x00);
  365   2          }
  366   1          while (1)
  367   1          {
  368   2              // 监听按键操作
  369   2              if (key3 == 0) // 下一项
  370   2              {
  371   3                  delay_ms(10);
  372   3                  while (key3 == 0);
  373   3                  delay_ms(10);
  374   3                  flag++;
  375   3                  // 如果到达菜单底部，则翻页到下一页
  376   3                  if (flag > MENU_SIZE) {
  377   4                      flag = 1; // 重置指针
  378   4                      page = (page == 1) ? 2 : 1; // 切换到下一页
  379   4                  }
  380   3              }
C251 COMPILER V5.60.0,  menu                                                               06/05/24  21:16:29  PAGE 7   

  381   2              if (key1 == 0) // 上一项
  382   2              {
  383   3                  delay_ms(10);
  384   3                  while (key1 == 0);
  385   3                  delay_ms(10);
  386   3                  flag--;
  387   3                  // 如果在第一页按上一页，翻至第二页
  388   3                  if (flag == 0 && page == 1) {
  389   4                      flag = MENU_SIZE + 1; // 调整指针位置到第二页底部
  390   4                      page = 2; // 切换到第二页
  391   4                  }
  392   3                  // 如果在第二页按上一页，返回到第一页
  393   3                  else if (flag == 0 && page == 2) {
  394   4                      flag = MENU_SIZE; // 调整指针位置到第一页底部
  395   4                      page = 1; // 切换到第一页
  396   4                  }
  397   3              } 
  398   2              //----------------------一二页区---------------------------//
  399   2              if (page == 1)  //第一页
  400   2              {
  401   3                  if(page1==1)
  402   3                  {
  403   4                      oled_fill(0x00);
  404   4                      page1=2;
  405   4                      oled_p8x16str(22, 0, "N_P");  
  406   4                      oled_printf_float_px8(45, 0, Nh_P, 2, 3); // 内环P
  407   4                      oled_p8x16str(22, 2, "N_D");  
  408   4                      oled_printf_float_px8(45, 2, Nh_D, 2, 3); // 内环D
  409   4                      oled_p8x16str(22, 4, "W_P");  
  410   4                      oled_printf_float_px8(45, 4, Wh_P, 3, 2); // 外环P
  411   4                      oled_p8x16str(22, 6, "W_D");  
  412   4                      oled_printf_float_px8(45, 6, Wh_D, 3, 2); // 外环D
  413   4                  }
  414   3              } 
  415   2              else if (page == 2) //第二页
  416   2              {
  417   3                  if(page1==2)
  418   3                  {
  419   4                      oled_fill(0x00);
  420   4                      page1=1;  
  421   4                     // oled_p8x16str(22, 0, "Add");
  422   4                      oled_p8x16str(22, 2, "W_Val");
  423   4                      oled_p8x16str(22, 4, "N_Val");            
  424   4                  }
  425   3              }
  426   2      //----------------------一二页区---------------------------//
  427   2              if (key2 == 0&&page==1) // 确定并且在第一页
  428   2              {
  429   3                  delay_ms(10);
  430   3                  long_press_delay = 0;
  431   3                  while (key2 == 0)
  432   3                  {
  433   4                      delay_ms(10);
  434   4                      long_press_delay += 10;
  435   4                      if (long_press_delay >= INTERVAL_TIME - pree_delay)
  436   4                      {
  437   5                          if (flag == 1) {
  438   6                              oled_printf_float_px8(45, 0, Nh_P, 2, 3);
  439   6                              Nh_P = Nh_P + x1 * Val_add_lose;
  440   6                          } else if (flag == 2) {
  441   6                              oled_printf_float_px8(45, 2, Nh_D, 2, 3);
  442   6                              Nh_D = Nh_D + x1 * Val_add_lose;
  443   6                          } else if (flag == 3) {
  444   6                              Wh_P = Wh_P + x* Val_add_lose;
  445   6                              oled_printf_float_px8(45, 4, Wh_P, 3, 2);
  446   6                          } else if (flag == 4) {
C251 COMPILER V5.60.0,  menu                                                               06/05/24  21:16:29  PAGE 8   

  447   6                              Wh_D = Wh_D + x * Val_add_lose;
  448   6                              oled_printf_float_px8(45, 6, Wh_D, 3, 2);
  449   6                          }
  450   5                          pree_delay += 150;
  451   5                          if (pree_delay > 1000) pree_delay = 1000;
  452   5                          long_press_delay = 0;
  453   5                      }
  454   4                  }
  455   3                  delay_ms(10);
  456   3                  if (long_press_delay < 800)
  457   3                  {
  458   4                      pree_delay = 0;
  459   4                      switch(flag)
  460   4                      {
  461   5                          case 1:
  462   5                          {
  463   6                              oled_printf_float_px8(45, 0, Nh_P, 2, 3);
  464   6                              Nh_P = Nh_P + x1 * Val_add_lose;
  465   6                          }break;
  466   5                          case 2:
  467   5                          {
  468   6                              oled_printf_float_px8(45, 2, Nh_D, 2, 3);
  469   6                              Nh_D = Nh_D + x1 * Val_add_lose;
  470   6                          }break;
  471   5                          case 3:
  472   5                          {
  473   6                              Wh_P = Wh_P + x * Val_add_lose;
  474   6                              oled_printf_float_px8(45, 4, Wh_P, 3, 2);
  475   6                          }break;
  476   5                          case 4:
  477   5                          {
  478   6                              Wh_D = Wh_D + x * Val_add_lose;
  479   6                              oled_printf_float_px8(45, 6, Wh_D, 3, 2);
  480   6                          }break;
  481   5                      }   
  482   4      
  483   4                  }
  484   3              } 
  485   2              if (key2 == 0&&page==2) // 确定并且在第一页
  486   2              {
  487   3                  delay_ms(10);
  488   3                  while(key2==0);
  489   3                  delay_ms(10);
  490   3                  if (flag == 1)//并且在第二页 第一列add与lose
  491   3                  {
  492   4                      count ++;
  493   4                      if(count==3)count=0;
  494   4                      if (count == 0)
  495   4                      {
  496   5                          oled_p8x16str(22, 0, "    ");   // 减值
  497   5                          oled_p8x16str(22, 0, "Lose");   // 减值
  498   5                          Val_add_lose = -1;
  499   5                          flag1++;
  500   5                      }
  501   4                      else if (count == 1)
  502   4                      {
  503   5                          oled_p8x16str(22, 0, "    ");   // 加值
  504   5                          oled_p8x16str(22, 0, "Add");    // 加值
  505   5                          Val_add_lose = 1;
  506   5                      }
  507   4                      
  508   4                  }
  509   3                  if (flag == 2)
  510   3                  {
  511   4                      x = x + 0.5 * Val_add_lose;
  512   4                      oled_printf_float_px8(50, 2, x, 3, 1);
C251 COMPILER V5.60.0,  menu                                                               06/05/24  21:16:29  PAGE 9   

  513   4                  }
  514   3                  if(flag==3)
  515   3                  {
  516   4                      x1 = x1 + 0.005 * Val_add_lose;
  517   4                      oled_printf_float_px8(50, 4, x1, 1, 3);                    
  518   4                  }
  519   3              }
  520   2              if (key4 == 0)  // 返回
  521   2              {
  522   3                  delay_ms(10);
  523   3                  while (key4 == 0);
  524   3                  delay_ms(10);
  525   3                  oled_fill(0x00); // 清屏
  526   3                  return 0; // 返回选择的选项
  527   3              }
  528   2              // 更新光标位置
  529   2              for (i = 0; i < MENU_SIZE; i++)
  530   2              {
  531   3                  if (i + 1 == flag)
  532   3                      oled_p8x16str(0, i * 2, "->");  // 光标指示当前选中项
*** WARNING C188 IN LINE 532 OF ..\USER\Hardware\menu.c: 'parameter 2': value truncated
  533   3                  else
  534   3                      oled_p8x16str(0, i * 2, "  ");
*** WARNING C188 IN LINE 534 OF ..\USER\Hardware\menu.c: 'parameter 2': value truncated
  535   3              } 
  536   2          }
  537   1      }
  538          
  539          
  540          //--
  541          //  @brief      二级调节速度菜单
  542          //  @param      void    
  543          //  @return     0 退出二级菜单    
  544          //--
  545          
  546          int Second__Speed_menu(void)
  547          {
  548   1          oled_fill(0x00);
  549   1          oled_p8x16str(0, 0, "Speed");
  550   1          oled_uint16_px8(45,0, speed); 
  551   1          while(1)
  552   1          {
  553   2              if(key2==0)
  554   2              {
  555   3                  delay_ms(10);
  556   3                  while(key2==0);
  557   3                  delay_ms(10);
  558   3                  speed=speed+1;
  559   3                  oled_uint16_px8(45,0, speed); 
  560   3              } 
  561   2              if(key3==0)
  562   2              {
  563   3                  delay_ms(10);
  564   3                  while(key3==0);
  565   3                  delay_ms(10);
  566   3                  speed=speed-1;
  567   3                  oled_uint16_px8(45,0, speed); 
  568   3              }
  569   2              if (key4 == 0)  // 返回
  570   2              {
  571   3                  delay_ms(10);
  572   3                  while (key4 == 0);
  573   3                  delay_ms(10);
  574   3                  oled_fill(0x00); // 清屏
  575   3                  return 0; // 返回选择的选项
  576   3              }
C251 COMPILER V5.60.0,  menu                                                               06/05/24  21:16:29  PAGE 10  

  577   2          }
  578   1      }
  579          
  580          
  581          //--
  582          //  @brief      二级显示数据菜单
  583          //  @param      void    
  584          //  @return     0 退出二级菜单    
  585          //--
  586          
  587          int Show_Val_Menu(void)
  588          {
  589   1          while(1)
  590   1          {
  591   2            NORMALIZATION_TRACKING_ADC(1,1);
  592   2          show_val();
  593   2              if (key4 == 0)  // 返回
  594   2              {
  595   3                  delay_ms(10);
  596   3                  while (key4 == 0);
  597   3                  delay_ms(10);
  598   3                  oled_fill(0x00); // 清屏
  599   3                  return 0; // 返回选择的选项
  600   3              }
  601   2          }
  602   1      }
  603          //--
  604          //  @brief      二级启动菜单
  605          //  @param      void    
  606          //  @return     0 退出二级菜单    
  607          //--
  608          
  609          int CarStart_Menu(void)
  610          {
  611   1          while(1)
  612   1          {
  613   2              oled_p8x16str(0, 0, "Car_Start");
  614   2              if(key2==0)
  615   2              {
  616   3                  delay_ms(10);
  617   3                  while (key2==0)
  618   3                  {
  619   4                      delay_ms(10);
  620   4                      return 1;// 小车启动
  621   4                  }
  622   3              }      
  623   2              if (key4 == 0)  // 返回
  624   2              {
  625   3                  delay_ms(10);
  626   3                  while (key4 == 0);
  627   3                  delay_ms(10);
  628   3                  oled_fill(0x00); // 清屏
  629   3                  return 0; // 返回选择的选项
  630   3              } 
  631   2          }
  632   1      }


Module Information          Static   Overlayable
------------------------------------------------
  code size            =      4684     ------
  ecode size           =    ------     ------
  data size            =    ------     ------
  idata size           =    ------     ------
  pdata size           =    ------     ------
  xdata size           =    ------     ------
  xdata-const size     =    ------     ------
C251 COMPILER V5.60.0,  menu                                                               06/05/24  21:16:29  PAGE 11  

  edata size           =        66     ------
  bit size             =    ------     ------
  ebit size            =    ------     ------
  bitaddressable size  =    ------     ------
  ebitaddressable size =    ------     ------
  far data size        =    ------     ------
  huge data size       =    ------     ------
  const size           =    ------     ------
  hconst size          =       188     ------
End of Module Information.


C251 COMPILATION COMPLETE.  8 WARNING(S),  0 ERROR(S)
