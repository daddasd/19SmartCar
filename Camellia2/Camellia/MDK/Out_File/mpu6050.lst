C251 COMPILER V5.60.0,  mpu6050                                                            03/05/24  16:21:04  PAGE 1   


C251 COMPILER V5.60.0, COMPILATION OF MODULE mpu6050
OBJECT MODULE PLACED IN .\Out_File\mpu6050.obj
COMPILER INVOKED BY: E:\Keil5C251\C251\BIN\C251.EXE ..\USER\Hardware\mpu6050.c XSMALL WARNINGLEVEL(3) OPTIMIZE(0,SPEED) 
                    -BROWSE INCDIR(..\..\Libraries\libraries;..\..\Libraries\seekfree_libraries;..\..\Libraries\seekfree_peripheral;..\CODE;.
                    -.\USER\inc;..\USER\src;..\USER\Hardware;..\USER\Hardware) DEBUG PRINT(.\Out_File\mpu6050.lst) TABS(2) OBJECT(.\Out_File\
                    -mpu6050.obj) 

stmt  level    source

    1          /*
    2           * @Description: 
    3           * @Author: Yzhi
    4           * @Date: 2023-10-22 08:38:21
    5           * @LastEditTime: 2023-11-15 22:02:55
    6           * @LastEditors: Yzhi
    7           */
    8          
    9          #include "myconfig.h"
   10          
   11          #define WINDOW_SIZE 10
   12          #define LOW_PASS_ALPHA 0.4f
   13          
   14          float gyro_zero_wander(void) {
   15   1          static float sum = 0;
   16   1          static int flag = 1;
   17   1          int i=0;
   18   1          if (flag == 1) {
   19   2              for (i = 0; i < 100; i++) {
   20   3                  sum = sum + mpu6050_gyro_z;
   21   3              }
   22   2              flag = 0;
   23   2              return sum / 100;
   24   2          }
   25   1          return sum / 100;
   26   1      }
   27          
   28          int medianFilter1(int window[]) {
   29   1          int temp, i = 0, j = 0;
   30   1          // 对窗口数据进行排序
   31   1          for (i = 0; i < WINDOW_SIZE - 1; i++) {
   32   2              for (j = 0; j < WINDOW_SIZE - i - 1; j++) {
   33   3                  if (window[j] > window[j + 1]) {
   34   4                      // 交换两个元素
   35   4                      temp = window[j];
   36   4                      window[j] = window[j + 1];
   37   4                      window[j + 1] = temp;
   38   4                  }
   39   3              }
   40   2          }
   41   1      
   42   1          // 返回中间值
   43   1          return window[WINDOW_SIZE / 2];
   44   1      }
   45          
   46          double lowPassFilter(double current, double previous, float alpha) {
   47   1          // 低通滤波器
   48   1          return alpha * current + (1 - alpha) * previous;
   49   1      }
   50          
   51          double Get_Angle() {
   52   1          // 假设 mpu6050_gyro_z 是一个全局变量，表示陀螺仪的 z 轴角速度
   53   1          static double gyro_z_values[WINDOW_SIZE] = {0}; // 用于存储窗口内的陀螺仪值
   54   1          static int index = 0;
   55   1          float filtered_angle;
   56   1          int i = 0;
C251 COMPILER V5.60.0,  mpu6050                                                            03/05/24  16:21:04  PAGE 2   

   57   1          int window[WINDOW_SIZE];
   58   1          double gyro_z = mpu6050_gyro_z - gyro_zero_wander();
   59   1      
   60   1          // 低通滤波
   61   1          gyro_z = lowPassFilter(gyro_z, gyro_z_values[index], LOW_PASS_ALPHA);
   62   1      
   63   1          gyro_z_values[index] = gyro_z;
   64   1          index = (index + 1) % WINDOW_SIZE;
   65   1          for (i = 0; i < WINDOW_SIZE; i++) {
   66   2              window[i] = gyro_z_values[(index + i) % WINDOW_SIZE];
   67   2          }
   68   1      
   69   1          filtered_angle = medianFilter1(window);
   70   1      
   71   1          // 返回经过低通滤波和中值滤波后的角度值
   72   1          return filtered_angle;
   73   1      }


Module Information          Static   Overlayable
------------------------------------------------
  code size            =       599     ------
  ecode size           =    ------     ------
  data size            =    ------     ------
  idata size           =    ------     ------
  pdata size           =    ------     ------
  xdata size           =    ------     ------
  xdata-const size     =    ------     ------
  edata size           =       102     ------
  bit size             =    ------     ------
  ebit size            =    ------     ------
  bitaddressable size  =    ------     ------
  ebitaddressable size =    ------     ------
  far data size        =    ------     ------
  huge data size       =    ------     ------
  const size           =    ------     ------
  hconst size          =        64     ------
End of Module Information.


C251 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
