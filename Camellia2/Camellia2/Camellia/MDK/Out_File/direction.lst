C251 COMPILER V5.60.0,  direction                                                          17/04/24  15:46:28  PAGE 1   


C251 COMPILER V5.60.0, COMPILATION OF MODULE direction
OBJECT MODULE PLACED IN .\Out_File\direction.obj
COMPILER INVOKED BY: F:\Keil_c251\C251\BIN\C251.EXE ..\USER\Hardware\direction.c XSMALL WARNINGLEVEL(3) OPTIMIZE(0,SPEED
                    -) BROWSE INCDIR(..\..\Libraries\libraries;..\..\Libraries\seekfree_libraries;..\..\Libraries\seekfree_peripheral;..\CODE
                    -;..\USER\inc;..\USER\src;..\USER\Hardware;..\USER\Hardware) DEBUG PRINT(.\Out_File\direction.lst) TABS(2) OBJECT(.\Out_F
                    -ile\direction.obj) 

stmt  level    source

    1          /*
    2           * @Description:
    3           * @Author: Yzhi
    4           * @Date: 2023-11-17 21:24:19
    5           * @LastEditTime: 2024-01-19 11:52:20
    6           * @LastEditors: Yzhi
    7           */
    8          #include "myconfig.h"
    9          
   10          #define out_max 20000
   11          #define Angle_MAX 3500
   12          
   13          float Nh_P = 0.550;
   14          float Nh_D = 1.75;
   15          float Wh_P = 22;
   16          float Wh_D = 10;
   17          
   18          //--
   19          //@brief      方向环(外环) 位置式
   20          //@param      c hazhi : 电感差值 KP 比例 KI 积分 KD 微分
   21          //@return     void
   22          //--
   23          
   24          int wh_Turn_Out(int16 chazhi, float dir_p, float dir_d)
   25          {
   26   1        float error;
   27   1        static float last_error = 0;
   28   1        float Output;
   29   1        float error_derivative;
   30   1        // 计算位置误差
   31   1        error = chazhi;
   32   1        // 计算位置误差变化率
   33   1        error_derivative = error - last_error;
   34   1        // 计算PD控制器的输出
   35   1        Output = error * dir_p + error_derivative * dir_d;
   36   1        // 更新上一时刻的位置误差
   37   1        last_error = error;
   38   1        // 对输出进行限幅
   39   1        Output = limit(Output, out_max);
   40   1        return (int)Output;
   41   1      }
   42          
   43          //--
   44          //@brief      方向环(内环) 位置式
   45          //@param      chazhi : 电感差值 KP 比例 KI 积分 KD 微分
   46          //@return     void
   47          //--
   48          
   49          int nh_Turn_Out(int err, float dir_p, float dir_d)
   50          {
   51   1        float error;
   52   1        static float last_error = 0;
   53   1        float Output;
   54   1        float error_derivative;
   55   1        static float I_out;
   56   1        // 计算位置误差
C251 COMPILER V5.60.0,  direction                                                          17/04/24  15:46:28  PAGE 2   

   57   1        error = err - imu660ra_gyro_z/65.6;
   58   1        // 计算位置误差变化率
   59   1        
   60   1        error_derivative = error - last_error;
   61   1        Output += (int)(error * dir_p+error_derivative*dir_d);
   62   1        // 更新上一时刻的位置误差
   63   1        last_error = error;
   64   1        // 对输出进行限幅
   65   1        nh_out = limit(Output, out_max);
   66   1        Output = nh_out;
   67   1        return (int)Output;
   68   1      }
   69          
   70          //--
   71          //@brief      方向环控制（内环1ms外环3ms）
   72          //@param      void
   73          //@return     方向环输出
   74          //-
   75          int DirControl(void)
   76          {
   77   1        static int count = 0;
   78   1        static int wh_out = 0;
   79   1        if (count == 3)
   80   1        {
   81   2          wh_out = wh_Turn_Out(Inductance_Error, Wh_P, Wh_D);
   82   2          count = 0;
   83   2        }
   84   1        count++;
   85   1        return (int)nh_Turn_Out(wh_out, Nh_P, Nh_D) * count / 3;
   86   1      }
   87          /**
   88           * @brief 角度环
   89           *
   90           * @param target 目标角度
   91           * @param actual 实际角度
   92           */
   93          int Angle_Ring(double target, double actual, float p, float i, float d)
   94          {
   95   1        float error;
   96   1        static float last_error = 0, Ki_val = 0;
   97   1        int Output;
   98   1        float error_derivative;
   99   1        // 计算位置误差
  100   1        error = target - actual;
  101   1        Ki_val += error;
  102   1        if (Ki_val > 1000)
  103   1          Ki_val = 1000;
  104   1        if (Ki_val < -1000)
  105   1          Ki_val = -1000;
  106   1        // 计算位置误差变化率
  107   1        error_derivative = error - last_error;
  108   1        // 计算PD控制器的输出
  109   1        Output = (int)error * p + error_derivative * d + Ki_val * i;
  110   1        // 更新上一时刻的位置误差
  111   1        last_error = error;
  112   1        // 对输出进行限幅
  113   1        Output = limit(Output, Angle_MAX);
  114   1        Motor_PWM(-Output, +Output);
  115   1        if (abs(error) < 5) // 如果误差小于5度代表到达目标角度
  116   1        {
  117   2          return 1;
  118   2        }
  119   1        return 0;
  120   1      }
  121          
  122          /**
C251 COMPILER V5.60.0,  direction                                                          17/04/24  15:46:28  PAGE 3   

  123           * @brief  方向环方案二，陀螺仪作为d项抑制
  124           *
  125           * @param chazhi
  126           * @param dir_p
  127           * @param dir_d
  128           * @param dir_d2
  129           * @return int
  130           */
  131          int DirControl_2(int16 chazhi, float dir_p, float dir_d, float dir_d2)
  132          {
*** WARNING C57 IN LINE 132 OF ..\USER\Hardware\direction.c: parameter 1: different from declaration
  133   1        float error;
  134   1        static float last_error = 0;
  135   1        float Output;
  136   1        float error_derivative;
  137   1        // 计算位置误差
  138   1        error = chazhi;
  139   1        // 计算位置误差变化率
  140   1        error_derivative = error - last_error;
  141   1        // 计算PD控制器的输出
  142   1        Output = error * dir_p + error_derivative * dir_d + mpu6050_gyro_z * dir_d2;
  143   1        // 更新上一时刻的位置误差
  144   1        last_error = error;
  145   1        // 对输出进行限幅
  146   1        Output = limit(Output, out_max);
  147   1        return (int)Output;
  148   1      }


Module Information          Static   Overlayable
------------------------------------------------
  code size            =       715     ------
  ecode size           =    ------     ------
  data size            =    ------     ------
  idata size           =    ------     ------
  pdata size           =    ------     ------
  xdata size           =    ------     ------
  xdata-const size     =    ------     ------
  edata size           =       144     ------
  bit size             =    ------     ------
  ebit size            =    ------     ------
  bitaddressable size  =    ------     ------
  ebitaddressable size =    ------     ------
  far data size        =    ------     ------
  huge data size       =    ------     ------
  const size           =    ------     ------
  hconst size          =        84     ------
End of Module Information.


C251 COMPILATION COMPLETE.  1 WARNING(S),  0 ERROR(S)
