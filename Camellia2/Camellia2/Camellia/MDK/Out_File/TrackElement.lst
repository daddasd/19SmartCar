C251 COMPILER V5.60.0,  TrackElement                                                       10/04/24  21:46:07  PAGE 1   


C251 COMPILER V5.60.0, COMPILATION OF MODULE TrackElement
OBJECT MODULE PLACED IN .\Out_File\TrackElement.obj
COMPILER INVOKED BY: F:\Keil_c251\C251\BIN\C251.EXE ..\USER\Hardware\TrackElement.c XSMALL WARNINGLEVEL(3) OPTIMIZE(0,SP
                    -EED) BROWSE INCDIR(..\..\Libraries\libraries;..\..\Libraries\seekfree_libraries;..\..\Libraries\seekfree_peripheral;..\C
                    -ODE;..\USER\inc;..\USER\src;..\USER\Hardware;..\USER\Hardware) DEBUG PRINT(.\Out_File\TrackElement.lst) TABS(2) OBJECT(.
                    -\Out_File\TrackElement.obj) 

stmt  level    source

    1          /*
    2           * @Description: 
    3           * @Author: Yzhi
    4           * @Date: 2024-01-10 09:24:18
    5           * @LastEditTime: 2024-01-10 09:32:32
    6           * @LastEditors: Yzhi
    7           */
    8          #include "myconfig.h"
    9          
   10          int Element_Order[4]={0};
   11          
   12          int shizi_flag=0;
   13          int ring_flag=-1;
   14          long bmq_jifen=0;
   15          double angle_jifen=0;
   16          int Track_flag=0; //正常循迹
   17          int set_speed = 0; //在赛道上不断更改速度
   18          
   19          int RING_FLAG1=0;
   20          int RING_FLAG2=0;
   21          int RING_FLAG3=0;
   22          int RING_FLAG4=0;
   23          
   24          int ANGLE_FLAG=0; //角度积分标志
   25          double Angle4=0;  //角度积分
   26          int DISTANCE_FLAG=0;//距离积分标志
   27          long Distance=0;//距离积分
   28          
   29          int RAngle_Flag = 0; //90度标志位
   30          
   31          /*外环与电机pid与速度改变的参数*/
   32          
   33          double Sub_wh_p = 20;
   34          double Sub_wh_d = 10;
   35          double Sub_motor_p = 0;
   36          double Sub_motor_i = 0;
   37          int    Sub_speed = -10;
   38          /*角度环参数*/
   39          float Angle_P = 70;
   40          float Angle_I = 0.4;
   41          float Angle_D = 40;
   42          
   43          void Distace(int flag)
   44          {
   45   1        DISTANCE_FLAG=flag;
   46   1        if(DISTANCE_FLAG)
   47   1           Distance+=(R_Pulse+L_Pulse)/2;
   48   1      }
   49          
   50          /**
   51          *  @brief      十字路口
   52          *  @param      void
   53          *  @return     void
   54          **/
   55          void Crossroad(void)
   56          {
C251 COMPILER V5.60.0,  TrackElement                                                       10/04/24  21:46:07  PAGE 2   

   57   1         if(L1_NOR_ADC>40&&L2_NOR_ADC>40&&R2_NOR_ADC>40&&R1_NOR_ADC>40||shizi_flag==-1)//十字路口
   58   1         {
   59   2          shizi_flag=-1;
   60   2          Track_flag=0;
   61   2          bmq_jifen+=(R_Pulse+L_Pulse)/2;
   62   2          if(bmq_jifen>524)
   63   2          {
   64   3            bmq_jifen=0;
   65   3            shizi_flag=1;
   66   3          }
   67   2          Motor_PWM(2000,2000);
   68   2         }
   69   1         else
   70   1           Track_flag=1;//正常循迹
   71   1      }
   72          
   73          void Right_Angle(void)
   74          {
   75   1        if (L2_NOR_ADC > 90 && L1_NOR_ADC < 30 && L3_NOR_ADC > 75 && R3_NOR_ADC < 20 && R2_NOR_ADC < 20 && R1_NO
             -R_ADC < 30 && RAngle_Flag==0) // 左转
   76   1        {
   77   2          Motor_PWM(3500, 3500);
   78   2          Angle_Ring(90, angle1,Angle_P, Angle_I, Angle_D);
   79   2          RAngle_Flag = 1; //清除标志位
   80   2        }
   81   1        else if (R2_NOR_ADC > 90 && R1_NOR_ADC < 30 && R3_NOR_ADC > 75 && L3_NOR_ADC < 20 && L2_NOR_ADC < 20 && 
             -L1_NOR_ADC < 30 && RAngle_Flag == 1)//右转
   82   1        {
   83   2          Motor_PWM(3500, 3500);
   84   2          Angle_Ring(-90, angle1, Angle_P, Angle_I, Angle_D);
   85   2          RAngle_Flag = 1; // 清除标志位
   86   2        }
   87   1      }
   88          
   89          
   90          /**
   91          *  @brief      六边环岛
   92          *  @param      角度
   93          *  @return     void       
   94          **/
   95          void Roundabout(float angle)
   96          {
   97   1         static int bmq_flag=0,angle_flag=0,angle2=0,yu_flag=0,angle_flag2=0,status=0;
   98   1         if(L1_NOR_ADC>100&&R1_NOR_ADC>55&&R2_NOR_ADC<15&&L2_NOR_ADC<15||ring_flag==0||ring_flag==1)//六边环岛
   99   1         {
  100   2           if(status==0)  //预进入环岛
  101   2            if(bmq_jifen<4524&&bmq_flag==0)
  102   2            {
  103   3              bmq_jifen+=(R_Pulse+L_Pulse)/2;
  104   3              Motor_PWM(2000,2000);
  105   3              ring_flag=0;
  106   3              Track_flag=0;
  107   3            }
  108   2            else
  109   2            {
  110   3              status=1; 
  111   3              bmq_jifen=0;
  112   3              bmq_flag=1; //编码器停止积分
  113   3              angle_flag2=2;//进入环岛打固定角度
  114   3            }
  115   2          else if(status==1)//进入环岛
  116   2          { 
  117   3            if(angle_flag2==2&&angle_flag==0)//转40度
  118   3            {
  119   4              if (Angle_Ring(45, angle1, Angle_P, Angle_I, Angle_D))
  120   4              {
C251 COMPILER V5.60.0,  TrackElement                                                       10/04/24  21:46:07  PAGE 3   

  121   5                angle1=0;  //角度积分清零
  122   5                yu_flag=3;//编码器开启积分
  123   5                angle_flag2=0;//退出角度积分
  124   5                angle_flag=1;//停止陀螺仪积分
  125   5              }
  126   4              else
  127   4                  angle1+=(Get_Angle()/7387)+0.0001;
  128   4            }
  129   3            if(yu_flag==3) //进入圆环行驶一段距离开始正常循迹
  130   3            {
  131   4              if(bmq_jifen<1024&&yu_flag==3)
  132   4              {
  133   5                bmq_jifen+=(R_Pulse+L_Pulse)/2;
  134   5                Motor_PWM(2000,2000);
  135   5              }
  136   4              else
  137   4              {
  138   5                bmq_jifen=0;
  139   5                yu_flag=0; //编码器停止积分
  140   5                ring_flag=4;//进入圆环结束
  141   5                status=3;
  142   5                Track_flag=1;//正常循迹
  143   5              }     
  144   4            }
  145   3          }
  146   2          else if(status==3) //出环岛
  147   2          {
  148   3            if(R1_NOR_ADC>30&&L1_NOR_ADC>30&&R2_NOR_ADC<10&&L2_NOR_ADC>15||status==3)//出六边环岛
  149   3            {
  150   4              if(bmq_jifen<1524&&status==3)
  151   4              {
  152   5                bmq_jifen+=(R_Pulse+L_Pulse)/2;
  153   5                Motor_PWM(1800,2300);
  154   5              }
  155   4              else
  156   4              {
  157   5                bmq_jifen=0;
  158   5                status=4;
  159   5                Track_flag=1;//正常循迹
  160   5              }   
  161   4            }
  162   3          }
  163   2          else
  164   2             Track_flag=1;
  165   2         }
  166   1         else 
  167   1           Track_flag=1;
  168   1      }
*** WARNING C47 IN LINE 95 OF ..\USER\Hardware\TrackElement.c: 'angle': unreferenced parameter
  169          
  170          void Sub_Pid(float error)
  171          {
  172   1          float err = error;
  173   1        if(err>20) //偏离赛道最大
  174   1        {
  175   2          Sub_wh_p = 20;
  176   2          Sub_wh_d = 10;
  177   2          Sub_motor_p = 0;
  178   2          Sub_motor_i = 0;
  179   2          Sub_speed = -10;
  180   2        }
  181   1      }
  182          
  183          /**
  184          *  @brief      基础循迹
  185          *  @param      void
C251 COMPILER V5.60.0,  TrackElement                                                       10/04/24  21:46:07  PAGE 4   

  186          *  @return     void        
  187          **/
  188          void Tracking(int Set_speed)
  189          {
  190   1        static int count=0,pwm=0;
  191   1        Sum_Pulse=(L_Pulse+R_Pulse)/2;
  192   1        count++;
  193   1        dir_out=DirControl();
  194   1        if(count==10)
  195   1        {
  196   2          pwm=Speed_pid_Out(Set_speed,Sum_Pulse); //减或加一个方向环的输出
  197   2          count=0;
  198   2        }
  199   1        Motor_PWM(pwm-dir_out,pwm+dir_out);
  200   1      }
  201          


Module Information          Static   Overlayable
------------------------------------------------
  code size            =      1328     ------
  ecode size           =    ------     ------
  data size            =    ------     ------
  idata size           =    ------     ------
  pdata size           =    ------     ------
  xdata size           =    ------     ------
  xdata-const size     =    ------     ------
  edata size           =       104     ------
  bit size             =    ------     ------
  ebit size            =    ------     ------
  bitaddressable size  =    ------     ------
  ebitaddressable size =    ------     ------
  far data size        =    ------     ------
  huge data size       =    ------     ------
  const size           =    ------     ------
  hconst size          =       220     ------
End of Module Information.


C251 COMPILATION COMPLETE.  1 WARNING(S),  0 ERROR(S)
