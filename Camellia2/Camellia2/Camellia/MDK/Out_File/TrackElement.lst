C251 COMPILER V5.60.0,  TrackElement                                                       12/04/24  21:23:10  PAGE 1   


C251 COMPILER V5.60.0, COMPILATION OF MODULE TrackElement
OBJECT MODULE PLACED IN .\Out_File\TrackElement.obj
COMPILER INVOKED BY: F:\Keil_c251\C251\BIN\C251.EXE ..\USER\Hardware\TrackElement.c XSMALL WARNINGLEVEL(3) OPTIMIZE(0,SP
                    -EED) BROWSE INCDIR(..\..\Libraries\libraries;..\..\Libraries\seekfree_libraries;..\..\Libraries\seekfree_peripheral;..\C
                    -ODE;..\USER\inc;..\USER\src;..\USER\Hardware;..\USER\Hardware) DEBUG PRINT(.\Out_File\TrackElement.lst) TABS(2) OBJECT(.
                    -\Out_File\TrackElement.obj) 

stmt  level    source

    1          /*
    2           * @Description: 
    3           * @Author: Yzhi
    4           * @Date: 2024-01-10 09:24:18
    5           * @LastEditTime: 2024-01-10 09:32:32
    6           * @LastEditors: Yzhi
    7           */
    8          #include "myconfig.h"
    9          
   10          int Element_Order[4]={0};
   11          
   12          int shizi_flag=0;
   13          int ring_flag=-1;
   14          long bmq_jifen=0;
   15          double angle_jifen=0;
   16          int Track_flag=0; //正常循迹
   17          int set_speed = 0; //在赛道上不断更改速度
   18          
   19          int RING_FLAG1=0;
   20          int RING_FLAG2=0;
   21          int RING_FLAG3=0;
   22          int RING_FLAG4=0;
   23          
   24          int ANGLE_FLAG=0; //角度积分标志
   25          double Angle4=0;  //角度积分
   26          int DISTANCE_FLAG=0;//距离积分标志
   27          long Distance=0;//距离积分
   28          
   29          int RAngle_Flag = 0; //90度标志位
   30          
   31          /*外环与电机pid与速度改变的参数*/
   32          
   33          double Sub_wh_p = 20;
   34          double Sub_wh_d = 10;
   35          double Sub_motor_p = 0;
   36          double Sub_motor_i = 0;
   37          int    Sub_speed = -10;
   38          /*角度环参数*/
   39          float Angle_P = 70;
   40          float Angle_I = 0.4;
   41          float Angle_D = 40;
   42          
   43          /*不同元素速度控制*/
   44          int Speed_Plan1 = 0;
   45          
   46          void Distace(int flag)
   47          {
   48   1        DISTANCE_FLAG=flag;
   49   1        if(DISTANCE_FLAG)
   50   1           Distance+=(R_Pulse+L_Pulse)/2;
   51   1      }
   52          
   53          /**
   54          *  @brief      十字路口
   55          *  @param      void
   56          *  @return     void
C251 COMPILER V5.60.0,  TrackElement                                                       12/04/24  21:23:10  PAGE 2   

   57          **/
   58          void Crossroad(void)
   59          {
   60   1         if(L1_NOR_ADC>40&&L2_NOR_ADC>40&&R2_NOR_ADC>40&&R1_NOR_ADC>40||shizi_flag==-1)//十字路口
   61   1         {
   62   2          shizi_flag=-1;
   63   2          Track_flag=0;
   64   2          bmq_jifen+=(R_Pulse+L_Pulse)/2;
   65   2          if(bmq_jifen>524)
   66   2          {
   67   3            bmq_jifen=0;
   68   3            shizi_flag=1;
   69   3          }
   70   2          Motor_PWM(2000,2000);
   71   2         }
   72   1         else
   73   1           Track_flag=1;//正常循迹
   74   1      }
   75          
   76          void Right_Angle(void)
   77          {
   78   1        if (L2_NOR_ADC > 65  && L3_NOR_ADC > 65 && R3_NOR_ADC < 30 && R2_NOR_ADC < 25  ) // 左转
   79   1        {
   80   2          P13=1; //蜂鸣器
   81   2          Motor_PWM(-2000, -2000);
   82   2          Angle_Ring(90, angle1,Angle_P, Angle_I, Angle_D);
   83   2          Inductance_Error = 0;//误差清零
   84   2          //RAngle_Flag = 1; //清除标志位
   85   2          
   86   2        }
   87   1        else if (R2_NOR_ADC > 65  && R3_NOR_ADC > 65 && L3_NOR_ADC < 30 && L2_NOR_ADC < 25)//右转
   88   1        {
   89   2          P13=1;
   90   2          Motor_PWM(-2000, -2000);
   91   2          Angle_Ring(-90, angle1, Angle_P, Angle_I, Angle_D);
   92   2          Inductance_Error = 0;//误差清零
   93   2          //RAngle_Flag = 1; // 清除标志位
   94   2          //P13=0;
   95   2        }
   96   1        else
   97   1        {
   98   2          P13=0;
   99   2        }
  100   1      }
  101          
  102          
  103          /**
  104          *  @brief      六边环岛
  105          *  @param      角度
  106          *  @return     void       
  107          **/
  108          void Roundabout(float angle)
  109          {
  110   1         static int bmq_flag=0,angle_flag=0,angle2=0,yu_flag=0,angle_flag2=0,status=0;
  111   1         if(L1_NOR_ADC>100&&R1_NOR_ADC>55&&R2_NOR_ADC<15&&L2_NOR_ADC<15||ring_flag==0||ring_flag==1)//六边环岛
  112   1         {
  113   2           if(status==0)  //预进入环岛
  114   2            if(bmq_jifen<4524&&bmq_flag==0)
  115   2            {
  116   3              bmq_jifen+=(R_Pulse+L_Pulse)/2;
  117   3              Motor_PWM(2000,2000);
  118   3              ring_flag=0;
  119   3              Track_flag=0;
  120   3            }
  121   2            else
  122   2            {
C251 COMPILER V5.60.0,  TrackElement                                                       12/04/24  21:23:10  PAGE 3   

  123   3              status=1; 
  124   3              bmq_jifen=0;
  125   3              bmq_flag=1; //编码器停止积分
  126   3              angle_flag2=2;//进入环岛打固定角度
  127   3            }
  128   2          else if(status==1)//进入环岛
  129   2          { 
  130   3            if(angle_flag2==2&&angle_flag==0)//转40度
  131   3            {
  132   4              if (Angle_Ring(45, angle1, Angle_P, Angle_I, Angle_D))
  133   4              {
  134   5                angle1=0;  //角度积分清零
  135   5                yu_flag=3;//编码器开启积分
  136   5                angle_flag2=0;//退出角度积分
  137   5                angle_flag=1;//停止陀螺仪积分
  138   5              }
  139   4              else
  140   4                  angle1+=(Get_Angle()/7387)+0.0001;
  141   4            }
  142   3            if(yu_flag==3) //进入圆环行驶一段距离开始正常循迹
  143   3            {
  144   4              if(bmq_jifen<1024&&yu_flag==3)
  145   4              {
  146   5                bmq_jifen+=(R_Pulse+L_Pulse)/2;
  147   5                Motor_PWM(2000,2000);
  148   5              }
  149   4              else
  150   4              {
  151   5                bmq_jifen=0;
  152   5                yu_flag=0; //编码器停止积分
  153   5                ring_flag=4;//进入圆环结束
  154   5                status=3;
  155   5                Track_flag=1;//正常循迹
  156   5              }     
  157   4            }
  158   3          }
  159   2          else if(status==3) //出环岛
  160   2          {
  161   3            if(R1_NOR_ADC>30&&L1_NOR_ADC>30&&R2_NOR_ADC<10&&L2_NOR_ADC>15||status==3)//出六边环岛
  162   3            {
  163   4              if(bmq_jifen<1524&&status==3)
  164   4              {
  165   5                bmq_jifen+=(R_Pulse+L_Pulse)/2;
  166   5                Motor_PWM(1800,2300);
  167   5              }
  168   4              else
  169   4              {
  170   5                bmq_jifen=0;
  171   5                status=4;
  172   5                Track_flag=1;//正常循迹
  173   5              }   
  174   4            }
  175   3          }
  176   2          else
  177   2             Track_flag=1;
  178   2         }
  179   1         else 
  180   1           Track_flag=1;
  181   1      }
*** WARNING C47 IN LINE 108 OF ..\USER\Hardware\TrackElement.c: 'angle': unreferenced parameter
  182          /**
  183           * @brief 根据标志位给不同速度
  184           * 
  185           * @param speed_flag 
  186           */
  187          void Speed_Plan(int speed_flag)
C251 COMPILER V5.60.0,  TrackElement                                                       12/04/24  21:23:10  PAGE 4   

  188          {
  189   1        switch (speed_flag)
  190   1        {
  191   2        case 1:
  192   2          Speed_Plan1 = 0;  //正常循迹速度
  193   2          break;
  194   2        case 2:
  195   2          Speed_Plan1 = -speed; //直角后速度清零
  196   2          break;
  197   2        case 3:
  198   2          Speed_Plan1 = -speed*0.30; // 环岛内速度，为正常速度的百分之70
  199   2          break;
  200   2        case 4:
  201   2          Speed_Plan1 = -speed * 0.5; // 预进圆环，为正常速度的百分之50;
  202   2          break;
  203   2        case 5:
  204   2          Speed_Plan1 = speed * 0.4; // 直道加速 ，大于正常速度的百分之40;
  205   2          break;
  206   2        default:
  207   2          break;
  208   2        }
  209   1      }
  210          
  211          void Sub_Pid(float error)
  212          {
  213   1          float err = error;
  214   1        if(err>20) //偏离赛道最大
  215   1        {
  216   2          Sub_wh_p = 20;
  217   2          Sub_wh_d = 10;
  218   2          Sub_motor_p = 0;
  219   2          Sub_motor_i = 0;
  220   2          Sub_speed = -10;
  221   2        }
  222   1      }
  223          
  224          /**
  225          *  @brief      基础循迹
  226          *  @param      void
  227          *  @return     void        
  228          **/
  229          void Tracking(int Set_speed)
  230          {
  231   1        static int count=0,pwm=0;
  232   1        Sum_Pulse=(L_Pulse+R_Pulse)/2;
  233   1        count++;
  234   1        dir_out=DirControl();
  235   1        if(count==10)
  236   1        {
  237   2          pwm=Speed_pid_Out(Set_speed,Sum_Pulse); //减或加一个方向环的输出
  238   2          count=0;
  239   2        }
  240   1        Motor_PWM(pwm-dir_out,pwm+dir_out);
  241   1      }
  242          


Module Information          Static   Overlayable
------------------------------------------------
  code size            =      1398     ------
  ecode size           =    ------     ------
  data size            =    ------     ------
  idata size           =    ------     ------
  pdata size           =    ------     ------
  xdata size           =    ------     ------
  xdata-const size     =    ------     ------
  edata size           =       108     ------
C251 COMPILER V5.60.0,  TrackElement                                                       12/04/24  21:23:10  PAGE 5   

  bit size             =    ------     ------
  ebit size            =    ------     ------
  bitaddressable size  =    ------     ------
  ebitaddressable size =    ------     ------
  far data size        =    ------     ------
  huge data size       =    ------     ------
  const size           =    ------     ------
  hconst size          =       226     ------
End of Module Information.


C251 COMPILATION COMPLETE.  1 WARNING(S),  0 ERROR(S)
